2009-04-12  Dave Beckett  <dave@dajobe.org>

	* Snapshotted redland_1_0_9 for 1.0.9 release (SVN 15143)

	* INSTALL.html: Document --enable-debug

	* configure.ac: Add --enable-debug to turn on LIBRDF_DEBUG without
	the need for maintainer mode.
	Removed unused STANDARD_CFLAGS subst.

	* src/Makefile.am: Removed unused STANDARD_CFLAGS

	* redland.pc.in: Add plugindir variable for the directory where
	modules go

	* Redland.i: Added librdf_parser_guess_name2() to SWIG API

	* AUTHORS: Added Dave Robillard and Lauri Aalto

	* INSTALL.html: Update to remove mention of raptor and rasqal
	building inside.

	* src/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_literal_helper): Init language_e_len to
	prevent gcc warning about used when not initialised.

	* docs/tmpl/iterator.sgml, docs/tmpl/parser.sgml,
	docs/tmpl/stream.sgml: update sgml templates

	* src/rdf_cache.c:
	(librdf_cache_set_common): Initialise new_object to NULL and check
	before freeing.

	* src/rdf_storage_postgresql.c:
	(librdf_storage_postgresql_init): Init res to NULL

	* src/rdf_iterator.h, src/rdf_stream.h: autodocs

	* docs/redland-sections.txt, docs/tmpl/parser.sgml,
	docs/tmpl/storage.sgml: Update doc templates and sections

	* docs/Makefile.am: Final filter build rule fix to make it works
	with 'make distcheck'.
	
	This took hours of tricky make and VPATH debugging - info recorded
	in makefile comments.

2009-04-11  Dave Beckett <dave@dajobe.org>

	* docs/Makefile.am: Adjust filter header rule to ensure it builds

	* docs/Makefile.am: Make $(top_srcdir)/src/filtered_rdf_log.h rule
	public

	* src/rdf_storage.c, src/rdf_storage.h:
	(librdf_storage_register_factory): Passes back an int status
	value. Now checks for the interface version in the supported range
	and fails if not.  Added some more parameter validation.

	* configure.ac, src/rdf_storage_module.h: Move
	LIBRDF_STORAGE_INTERFACE_VERSION to a macro and define max an min
	storage interface versions LIBRDF_STORAGE_MIN_INTERFACE_VERSION
	and LIBRDF_STORAGE_MAX_INTERFACE_VERSION

	* src/rdf_parser.c, src/rdf_parser.h:
	(librdf_parser_guess_name2): Added with new librdf_world* world
	argument.
	(librdf_parser_guess_name): Restored, but deprecated and uses the
	above to do the work.  Makes existing librdf API the same as 1.0.8
	in the absence of raptor V2 released.

	* src/rdf_stream.h, src/rdf_stream_internal.h: Move
	librdf_stream_get_method_flags public

	* src/rdf_stream_internal.h: librdf_stream_get_method_flags added
	for flags arg of stream get_method: aliases of iterator get_method
	flags for the day that iterator and stream are merged.

	* src/rdf_iterator.h: librdf_iterator_get_method_flags added for
	flags arg of iterator get_method

	* docs/tmpl/log.sgml, docs/tmpl/parser.sgml,
	docs/tmpl/redland-unused.sgml, docs/tmpl/storage.sgml,
	docs/tmpl/unused.sgml: Update sgml templates

2009-04-10  Dave Beckett <dave@dajobe.org>

	* src/rdf_storage_mysql.c:
	(librdf_storage_mysql_transaction_terminate): internal autodocs

	* docs/redland-sections.txt: Remove internal macros from unused section

	* src/rdf_cache.h: librdf_cache - autodoc

	* src/rdf_storage_module.h: librdf_storage_instance - autodocs

	* src/rdf_storage.c: (librdf_storage_set_instance,
	librdf_storage_get_instance): autodocs

	* docs/Makefile.am: Filter rdf_log.h before gtkdoc-scan gets there

	* src/rdf_parser.h: autodocs - format librdf_parser_set_uri_filter
	prototype so gtkdoc-scan can scan it

	* src/rdf_log.c: (librdf_log): autodocs - document .../Varargs

	* src/rdf_cache.c, src/rdf_storage.c: autodocs

	* docs/redland-sections.txt: More docs

	* docs/redland-sections.txt: update sections

	* src/rdf_raptor.c, src/rdf_raptor.h, src/rdf_raptor_internal.h:
	Convert to Unix LF

2009-04-07  Dave Beckett <dave@dajobe.org>

	* examples/Makefile.am, utils/Makefile.am: Split linker libs and
	flags between LDADD and AM_LDFLAGS

	* examples/Makefile.am: Add rule to make librdf.la

	* docs/tmpl/log.sgml, docs/tmpl/parser.sgml,
	docs/tmpl/redland-unused.sgml: Update templates

	* docs/Makefile.am: Fix DOC_SOURCE_DIR

	* Makefile.am, configure.ac, docs/Makefile.am,
	examples/Makefile.am, librdf, redland-src-config.in, src,
	utils/Makefile.am: Renamed dir librdf/ to src/

2009-03-31  Dave Beckett <dave@dajobe.org>

	* autogen.sh: Use LTDL_INIT in configure.ac to trigger --ltdl

	* librdf/rdf_storage_postgresql.c: make postgresql storage
	autodocs internal

	* librdf/rdf_hash.c: librdf_hash_values_count autodocs

	* librdf/rdf_storage_hashes.c: autodocs for
	librdf_storage_hashes_close are internal

	* librdf/rdf_storage_module.h: autodocs for storage factory types

	* librdf/rdf_storage_file.c, librdf/rdf_storage_hashes.c,
	librdf/rdf_storage_list.c, librdf/rdf_storage_mysql.c,
	librdf/rdf_storage_postgresql.c, librdf/rdf_storage_sqlite.c,
	librdf/rdf_storage_trees.c, librdf/rdf_storage_tstore.c:
	Fix autodocs for storage module registration functions to make them
	internal

	* configure.ac, NEWS.html, librdf/win32_rdf_config.h: Bump version
	to 1.0.9

	* autogen.sh, configure.ac: libtool V2 only. Minimum 2.2.0

2009-03-30  Dave Beckett <dave@dajobe.org>

	* docs/Makefile.am: (redland.3): Adjust sed to make NAME section
	of generated manual more debian lintian friendly

	* librdf/Makefile.am: Add rule to build
	${top_build_prefix}libltdl/libltdlc.la and remove those to try to
	build raptor and rasqal locally.

2009-03-29  Dave Beckett <dave@dajobe.org>

	* INSTALL.html, configure.ac, librdf/Makefile.am,
	librdf/rdf_digest_openssl.c: Removed openssl digest support - not
	used much and an extra large dependency. MD5 and SHA1 remain
	builtin.

	* librdf/rdf_hash.c:
	(librdf_free_hash_datum): Debug print at level 2 or more

	* librdf/rdf_storage_postgresql.c: Applied fixes from
	Issue#0000286 to fix "Numerous leaks, potential NULL pointer use,
	and dropped postgresql errors and buffer overruns in the
	postgresql storage module" Rebased from original patch around
	about SVN r14170 to current head, applied recent changes and fixed
	ISO C90 problems by moving declarations and assertions to start of
	blocks.
	Fixes Issue#0000286 http://bugs.librdf.org/mantis/view.php?id=286

	* librdf/rdf_storage_postgresql.c:
	(librdf_storage_postgresql_get_contexts): Fix allocation of N
	bytes not N x size_t bytes using patch from bug:
	Fixes Issue#0000285 http://bugs.librdf.org/mantis/view.php?id=285
	May also fix issue 102 according to bug.

	(librdf_storage_postgresql_free_gccontext_row): Removes unused
	function.  Unused because the memory the function frees belongs to a
	PGresult struct and is freed when that struct is freed with the
	appropriate postgresql API.

	* librdf/rdf_statement.c:
	(librdf_statement_encode_parts): Fix a buffer overrun error that
	could occur with certain size buffers. 	A buffer size of 1 is sure
	to write past the end of the buffer.
	Patch from Lou Sakey 2008-07-31 to redland-dev

	* librdf/rdf_hash.c: Protect world->hash_datums_list with
	hash_datums_mutex when threading.
	Patch from Lou Sakey 2008-07-31 to redland-dev

	* librdf/rdf_init.c: 
	(librdf_free_world): Destroy hash_datums_mutex and others in
	reverse order when threading.
	(librdf_world_init_mutex): Init hash_datums_mutex.
	Patch from Lou Sakey 2008-07-31 to redland-dev

	* librdf/rdf_init_internal.h: Add hash_datums_mutex for locking
	hash_datums class when with threads.
	Patch from Lou Sakey 2008-07-31 to redland-dev

	* librdf/rdf_log.h: librdf_log_level_func and librdf_log_func
	functions gain REDLAND_CALLBACK_STDCALL before function pointer to
	allow windows to adjust the calling convention for C#
	compatibility.
	Based on patch from Lou Sakey 2008-07-31 to redland-dev

	* librdf/librdf.h: Added REDLAND_CALLBACK_STDCALL macro to prefix
	selected callback function pointer definitions.  Enabled for
	windows when USE_STDCALL_CALLBACKS is defined.

	* librdf/rdf_uri.c: (librdf_new_uri): Clear key and value to all
	zeros before use to make it easier to debug since not all fields
	of the structure were used.
	Patch from Lou Sakey 2008-07-31 to redland-dev

	* librdf/win32_rdf_config.h: win32: Add STDCALL_CALLBACKS
	Enable HAVE_PTHREADS
	Disable mysql storage
	Patch from Lou Sakey 2008-07-31 to redland-dev

	* configure.ac: hello Berkeley DB 4.7

	* utils/Makefile.am: Add fix-groff-xhtml to dist

	* utils/Makefile.am, utils/fix-groff-xhtml (from
	/raptor/trunk/fix-groff-xhtml:15041): Copy in fix-groff-xhtml from
	raptor

	* configure.ac: libtool ltdl config that seems to work for V1 and V2

2009-03-29  Dave Robillard <dave@drobilla.net>

	* configure.ac, redland-src-config.in: Remove vestigial
	--with-raptor=internal and --with-rasqal=internal configure
	options.

2009-03-29  Dave Beckett <dave@dajobe.org>

	* Makefile.am: Add $(subdirs) to SUBDIRS if e.g. libltdl needs building

	* configure.ac: Use LT_INIT LTDL_INIT and LT_CONFIG_LTDL_DIR to
	initialize libtool and libltdl

2009-03-29  Dave Robillard <dave@drobilla.net>

	* librdf/rdf_init_internal.h, librdf/rdf_query_rasqal.c,
	librdf/rdf_raptor.c, librdf/rdf_raptor.h: Compile against raptor
	1.4.18.

2009-03-29  Dave Beckett <dave@dajobe.org>

	* autogen.sh: Delete libltdl dir early and always so it'll never
	be used by autogen.sh and will always be re-generated by
	libtoolize when needed.

	* configure.ac: revert libltdl/Makefile

	* configure.ac: Generate libltdl/Makefile

2009-02-18  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_file.c, librdf/rdf_storage_hashes.c,
	librdf/rdf_storage_list.c, librdf/rdf_storage_mysql.c,
	librdf/rdf_storage_postgresql.c, librdf/rdf_storage_sqlite.c,
	librdf/rdf_storage_trees.c, librdf/rdf_storage_tstore.c: Check for
	failures in storage instance allocation.

2009-01-13  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_literal_helper): Fixed whitespace in sql
	expression.

	* librdf/rdf_storage_sqlite.c: Do not write to the sqlite database
	when just querying.
	(librdf_storage_sqlite_uri_helper,
	librdf_storage_sqlite_blank_helper,
	librdf_storage_sqlite_literal_helper,
	librdf_storage_sqlite_node_helper,
	librdf_storage_sqlite_statement_helper,
	librdf_storage_sqlite_statement_operator_helper): Take in an
	add_new parameter to control whether to create new
	uri/blank/literal ids.
	(librdf_storage_sqlite_add_statements,
	librdf_storage_sqlite_context_add_statement): add_new
	(librdf_storage_sqlite_contains_statement): No add_new. Removed
	FIXME note about the issue.
	(librdf_storage_sqlite_find_statements): No add_new. Allow
	negative node_ids in queries. (FIXME: should not exec queries that
	are known to return nothing)
	(librdf_storage_sqlite_context_remove_statement,
	librdf_storage_sqlite_context_remove_statements,
	librdf_storage_sqlite_context_serialise): No add_new.

2008-12-01  Dave Beckett <dave@dajobe.org>

	* docs/redland-docs.xml: 2008

2008-11-22  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_node.c: (librdf_new_node_from_blank_identifier):
	Fixed a read memory after free bug.
	Fixes Issue #0000283 http://bugs.librdf.org/mantis/view.php?id=283

	* docs/redland-chapter-objects.xml,
	docs/redland-chapter-storage-modules.xml, docs/storage.html:
	Documentation fixes from
	Issue #0000282 http://bugs.librdf.org/mantis/view.php?id=282 

	* librdf/Makefile.am, librdf/rdf_storage.c,
	librdf/rdf_storage_file.c, librdf/rdf_storage_hashes.c,
	librdf/rdf_storage_list.c, librdf/rdf_storage_trees.c: Fixes to
	modular storages to get "make check" pass before install.

	"memory", "hashes", "trees", "file", "uri" storages now always
	built-in regardless of MODULAR_LIBRDF. Not building them as
	storage modules and removed the storage module entry point as
	unnecessary.
	(ltdl_module_callback): Check that storage module file name
	contains the string "librdf_storage" to prevent lots of module
	loading failure messages.
	(librdf_memstr): Pulled helper function from raptor_memstr.c.
	(librdf_storage_load_all_modules): Added logic for figuring out a
	reasonable module path. Uses REDLAND_MODULE_PATH environment
	variable if defined. If env var defined but empty, uses libtool
	defaults (used in local "make check" tests through
	TESTS_ENVIRONMENT). If env var not defined, use the install target
	dir.
	(librdf_storage_load_module): Fixed compiler warning about
	shadowing world variable.

2008-11-21  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage.c,
	librdf/rdf_storage.h: (librdf_storage_get_world): New API function
	for accessing the librdf_world associated with a storage. Required
	e.g. by storage modules not build with LIBRDF_INTERNAL.

	* librdf/rdf_iterator.h, librdf/rdf_iterator_internal.h,
	librdf/rdf_stream.h, librdf/rdf_stream_internal.h: Moved
	iterator/stream get_method flags to public API. They are required
	e.g. for storage modules not built with LIBRDF_INTERNAL.

2008-11-20  Dave Robillard <dave@drobilla.net>

	* librdf/rdf_storage.c:
	(librdf_storage_get_instance): Fix documentation.

2008-11-20  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage.c:
	(librdf_new_storage_from_factory): Fixed double deletion. storage
	init() always takes ownership of the options hash.

2008-11-18  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_query_results.c:
	(librdf_query_results_get_bindings): Fixed docs.

	* librdf/rdf_query.c:
	(main): Fixed rdf_query_test. Do not assume get_bindings returns
	bindings_count names in a NULL-terminated array (current rasqal
	HEAD returns all variables, not just bindings; array not NULL
	terminated)

2008-11-14  Dave Robillard <dave@drobilla.net>

	* librdf/Makefile.am, librdf/librdf_storage_module.h,
	librdf/rdf_storage.h, librdf/rdf_storage_internal.h,
	librdf/rdf_storage_module.h (from
	/librdf/trunk/librdf/librdf_storage_module.h:14904):
	Publicly install storage module interface
	redland/rdf_storage_module.h.

	* librdf/librdf_storage_module.h (from
	/librdf/trunk/librdf/rdf_storage_factory.h:14903),
	librdf/rdf_storage_factory.h, librdf/rdf_storage_internal.h:
	Give storage module interface header a more standalone-sensible
	name. External projects should now be able to implement this
	header and install a module to PREFIX/lib/redland and be
	discovered/used by redland at runtime.

	* librdf/rdf_storage_factory.h: Document discovery mechanism in
	rdf_storage_factory.h

	* configure.ac: Make modular backends the default.

	* librdf/rdf_storage_file.c, librdf/rdf_storage_mysql.c:
	Fix forward declarations.

	* configure.ac, librdf/Makefile.am, librdf/rdf_internal.h,
	librdf/rdf_storage.c, librdf/rdf_storage_file.c,
	librdf/rdf_storage_hashes.c, librdf/rdf_storage_list.c,
	librdf/rdf_storage_mysql.c, librdf/rdf_storage_postgresql.c,
	librdf/rdf_storage_sqlite.c, librdf/rdf_storage_trees.c,
	librdf/rdf_storage_tstore.c:
	Dynamically discover storage backends at runtime. 

	* librdf/rdf_storage.c, librdf/rdf_storage_file.c,
	librdf/rdf_storage_hashes.c, librdf/rdf_storage_list.c,
	librdf/rdf_storage_mysql.c, librdf/rdf_storage_postgresql.c,
	librdf/rdf_storage_sqlite.c, librdf/rdf_storage_trees.c,
	librdf/rdf_storage_tstore.c:
	Make storages clean up after themselves.

	* librdf/rdf_storage_hashes.c: Oops:
	(librdf_storage_hashes_clone): Remove debug printf.

	* librdf/rdf_storage.c, librdf/rdf_storage.h,
	librdf/rdf_storage_factory.h, librdf/rdf_storage_file.c,
	librdf/rdf_storage_hashes.c, librdf/rdf_storage_internal.h,
	librdf/rdf_storage_list.c, librdf/rdf_storage_mysql.c,
	librdf/rdf_storage_postgresql.c, librdf/rdf_storage_sqlite.c,
	librdf/rdf_storage_trees.c:
	What was called the storage "context" is now less confusingly
	called the storage "instance".
	Make the storage instance opaque to librdf.
	Remove context_length from librdf_storage_factory interface
	(abstraction violation).
	Add instance getter/setter method to librdf_storage so storages
	can be implemented without access to internals.
	Rework existing storages to use the above scheme.

	* librdf/rdf_storage_factory.h, librdf/rdf_storage_file.c,
	librdf/rdf_storage_internal.h: Separate storage "factory"
	interface from storage internals.

	* librdf/rdf_init_internal.h: Revert previous commit (unnecessary).

	* librdf/rdf_init_internal.h: Forward declare raptor_world if necessary.

2008-10-16  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_files.c, librdf/rdf_init.c, librdf/rdf_iterator.c,
	librdf/rdf_model.c, librdf/rdf_parser.c, librdf/rdf_serializer.c,
	librdf/rdf_storage.c: Wrapped deprecated function definitions in
	#ifndef REDLAND_DISABLE_DEPRECATED ... #endif

2008-10-13  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_init.c, librdf/rdf_raptor.c,
	librdf/rdf_raptor_internal.h:
	(librdf_world_open,librdf_init_raptor): Changed
	librdf_init_raptor() to not return anything and abort() on failure
	to be consistent with error handling in other librdf init
	functions. 

2008-10-09  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_log.c, librdf/rdf_log.h,
	librdf/rdf_log_internal.h:
	(librdf_log,librdf_log_simple): Pulled librdf_log(),
	librdf_log_simple() from library internals to API so that
	e.g. external storage modules can log messages.

	* librdf/Makefile.am, librdf/librdf.h, librdf/rdf_init.c,
	librdf/rdf_init_internal.h, librdf/rdf_log.c, librdf/rdf_model.c,
	librdf/rdf_parser.c, librdf/rdf_parser.h,
	librdf/rdf_parser_raptor.c, librdf/rdf_query_rasqal.c,
	librdf/rdf_raptor.c, librdf/rdf_raptor.h,
	librdf/rdf_raptor_internal.h, librdf/rdf_serializer_raptor.c,
	librdf/rdf_storage_sql.c, utils/rdfproc.c: Refactored librdf to
	use Raptor v2 APIs if available. Flagged with RAPTOR_V2_AVAILABLE.

	Pulled Raptor init/finish and librdf_uri adaptation code from
	rdf_parser_raptor to a new rdf_raptor module.

	API/ABI break:
	(librdf_parser_guess_name): API function now requires a
	librdf_world param.

	Other API changes:
	(librdf_world_get_raptor,librdf_world_set_raptor): New API functions.

	Other changes:
	(librdf_init_raptor,librdf_finish_raptor): New internal functions.
	(librdf_free_world,librdf_world_open): Use
	librdf_init_raptor(),librdf_finish_raptor(). Removed outdated
	comments related to raptor init order.
	(librdf_world_s): Internal struct gains raptor_world_ptr,
	raptor_world_allocated_here.
	(librdf_query_rasqal_constructor): Use rasqal_world_set_raptor()
	to set the raptor library instance before rasqal_world_open().
	(log_handler): Pass librdf_world to rdfproc log handler in
	user_data.

2008-09-30  Dave Robillard <dave@drobilla.net>

	* librdf/rdf_avltree.c: 'Fix' entirely irrelevant preprocessor
	macro, again.

	* librdf/rdf_avltree.c: Everyone's a critic.

	* librdf/rdf_avltree.c: Fix typo.

2008-09-29  Dave Robillard <dave@drobilla.net>

	* librdf/rdf_parser_raptor.c, librdf/rdf_storage_trees.c: Revert
	warning removal from r14573.  Make trees storage only return
	failure on actual failure (not when triple already exists), like
	other storages.

	* librdf/rdf_internal.h: Revert accidentally committed change to
	LIBRDF_ASSERT_DIE.

	* librdf/rdf_internal.h, librdf/rdf_parser_raptor.c:
	(librdf_parser_raptor_new_statement_handler): Remove unnecessary
	"fatal" error message when encountering duplicate triples.

	* librdf/rdf_avltree.c: Fix test case (last commit) to be
	correct (previous commit failed falsely, test now exposes segfault
	bug).
	(librdf_avltree_delete_internal): update parent pointers when
	deleting (courtesy Aymeric Barthe).

	* librdf/Makefile.am, librdf/rdf_avltree.c: Fix compilation of
	rdf_avltree_test. Change elements deleted in rdf_avl_tree_test to
	cause failure and expose bug.

2008-09-22  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_get_next_common): Do not leak context
	nodes.

2008-09-08  Lauri Aalto <laalto@iki.fi>

	* librdf/librdf.h, librdf/rdf_internal.h: Moved EXTERN_C
	definitions to internal header - no need to expose in API.

	* librdf/librdf.h, librdf/rdf_hash.c, librdf/rdf_iterator.c,
	librdf/rdf_list.c, librdf/rdf_model.c, librdf/rdf_parser.c,
	librdf/rdf_query.c, librdf/rdf_serializer.c, librdf/rdf_storage.c,
	librdf/rdf_stream.c: Workaround for an armcc c++ mode issue
	regarding function pointers as arguments: Need explicit extern "C"
	to get C linkage for C function pointers.

2008-09-07  Dave Beckett <dave@dajobe.org>

	* redland-config.1: manpage .l is bad

2008-09-06  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_cache.c: (main): Cast for c++

2008-09-05  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_cache.c, librdf/rdf_concepts.c: Casts for g++ from
	Issue#0000272 http://bugs.librdf.org/mantis/view.php?id=272

2008-08-12  Lauri Aalto <laalto@iki.fi>

	* examples/example5.c: Switch query_string,base_uri to correct
	order in example5

2008-08-11  Dave Beckett <dave@dajobe.org>

	* Makefile.am: Remove raptor and rasqal subdir possibilities

	* configure.ac: Use pkg-config to find raptor and rasqal unless in
	maintainer mode in which case --with-raptor / --with-rasqal allows
	a choice of system or sibling dirs ../raptor and ../rasqal

	* redland-src-config.in: prefer pkg-config raptor and adjust src
	dirs to be siblings of this, not children

2008-08-09  Dave Beckett <dave@dajobe.org>

	* INSTALL.html: Note how to build examples on cygwin.
	FIxes Issue#0000267

	* examples/Makefile.am: Add EXE suffix to

	* examples/example7.c: Return from main

	* examples/example6.c: Casts

	* examples/example5.c: Casts

	* examples/example4.c: Replace use of deprecated
	librdf_serializer_serialize_model() with
	librdf_serializer_serialize_model_to_file_handle()

2008-08-07  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_transaction_start): Prevent deadlocks with
	BEGIN IMMEDIATE instead of the default BEGIN DEFERRED. Set
	in_transaction flag only if the SQL exec returns success.

	(librdf_storage_sqlite_transaction_commit,
	librdf_storage_sqlite_transaction_rollback): Clear in_transaction
	flag only if the SQL exec returns success. Added missing semicolon
	to END.

2008-07-17  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_cache.c:
	(librdf_cache_cleanup): Adjust usage after cache cleanup by
	largest ejected node usage count seen.

	* librdf/rdf_cache.c: If capacity is 0, handle a cache that grows
	and dynamically allocate the nodes.
	(main): Update tests to try this.

	* librdf/rdf_cache.c: autodocs

	* librdf/rdf_cache.c: tidy WITH_THREADS code

	* librdf/rdf_cache.c: DEFAULT_FLUSH_PERCENT 20 is more realistic

	* librdf/Makefile.am: Add rdf_cache_test to tests

	* librdf/rdf_cache.c: (librdf_hist_node_compare): Invert order to
	eject low use objects.
	(main): Update tests

2008-07-16  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_cache.c: (librdf_cache_delete): Adjust size.

	* librdf/rdf_cache.c: (librdf_cache_cleanup): Sort hists array not
	hists array pointer

	* librdf/rdf_cache.c: (librdf_hist_node_compare): Try to fix compare

	* librdf/rdf_cache.c: small cache for testing

	* librdf/rdf_cache.c: tests pass

	* librdf/rdf_cache.c, librdf/rdf_cache.h: Initial object cache
	impl - tests fail

	* librdf/Makefile.am: Add rdf_cache_test

	* librdf/rdf_internal.h: Add rdf_cache.h

	* librdf/Makefile.am: Added rdf_cache.c rdf_cache.h

	* librdf/rdf_cache.c (from /librdf/trunk/librdf/rdf_uri.c:14278),
	librdf/rdf_cache.h (from /librdf/trunk/librdf/rdf_uri.h:14278):
	Copy rdf_uri* to rdf_cache.[ch]

2008-07-05  Dave Beckett <dave@dajobe.org>

	* docs/tmpl/concepts.sgml, docs/tmpl/parser.sgml: tmpl docs

2008-07-05  Dave Beckett  <dave@dajobe.org>

	* Snapshotted redland_1_0_8 for 1.0.8 release (SVN 14222)

2008-07-04  Dave Beckett <dave@dajobe.org>

	* /librdf/trunk, librdf: props

	* librdf/rdf_log.c: (librdf_log_simple): Do not format and print
	locator string if raptor_format_locator() returns an error (or 0)
	when getting the locator string length.

2008-07-04  Dave Beckett <dave@dajobe.org>

	* redland.pc.in: Add swig variable

2008-07-03  Dave Beckett <dave@dajobe.org>

	* Makefile.am: re-order pkgconfig

	* Makefile.am, configure.ac, librdf/Makefile.am,
	librdf/redland.pc.in, redland.pc.in (from
	/librdf/trunk/librdf/redland.pc.in:14197): Move redland.pc to root
	dir

	* RELEASE.html: deprecate redland-config

	* configure.ac: RAPTOR_MIN_VERSION now 1.4.17 to match rasqal

	* configure.ac: Add another way to find berkeleydb / sleepycatdb
	with libs in subdirs named after major versions

2008-07-02  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_storage_mysql.c:
	(librdf_storage_mysql_node_hash_common): Init some variables to
	NULL to prevent GCC warnings

2008-07-01  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_sql_test.c: Fixed file name in boilerplate
	comments

2008-06-30  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_parser.h: Make
	librdf_parser_parse_file_handle_as_stream arg be fh to match docs.

	* librdf/rdf_parser.h: Make
	librdf_parser_parse_file_handle_into_model arg be fh to match
	docs.

	* docs/redland-sections.txt: Added
	librdf_get_concept_ms_namespace,
	librdf_get_concept_schema_namespace,
	librdf_parser_parse_file_handle_as_stream and
	librdf_parser_parse_file_handle_into_model

	* docs/Makefile.am: Exclude rdf_avltree_internal.h

	* librdf/Makefile.am, librdf/rdf_avltree.c, librdf/rdf_avltree.h,
	librdf/rdf_avltree_internal.h: Rename rdf_avltree.h to
	rdf_avltree_internal.h

	* librdf/rdf_storage_mysql.c: (librdf_storage_mysql_get_handle):
	Use HAVE_MYSQL_OPT_RECONNECT to known when to apply reconnections
	Fixes Issue#0000256 http://bugs.librdf.org/mantis/view.php?id=256

	* configure.ac: Update checks for programs to use AC_PROG_CC and
	AM_PROG_CC_C_O
	Add a compile test for MYSQL_OPT_RECONNECT since newer mysql versions
	have it as an enum, not a macro.
	Fixes Issue#0000256 http://bugs.librdf.org/mantis/view.php?id=256

	* redland-config.in: Add datarootdir

	* Redland.i, FAQS.html, INSTALL.html, LICENSE.html, NEWS.html,
	README.html, RELEASE.html, TODO.html, redland-config.1,
	redland-config.in, redland-src-config.in, redland.rdf.in,
	demos/demo.pl, demos/ntriples.pl, demos/parser-tests.pl,
	demos/rss-show.pl, examples/example1.c, examples/example2.c,
	examples/example3.c, examples/example4.c, examples/example5.c,
	examples/example6.c, examples/example7.c, examples/redland_dbus.c,
	examples/rss2ical.c, librdf/librdf.h, librdf/rdf_concepts.c,
	librdf/rdf_concepts.h, librdf/rdf_concepts_internal.h,
	librdf/rdf_digest.c, librdf/rdf_digest.h,
	librdf/rdf_digest_internal.h, librdf/rdf_digest_md5.c,
	librdf/rdf_digest_openssl.c, librdf/rdf_digest_sha1.c,
	librdf/rdf_files.c, librdf/rdf_files.h, librdf/rdf_hash.c,
	librdf/rdf_hash.h, librdf/rdf_hash_bdb.c,
	librdf/rdf_hash_cursor.c, librdf/rdf_hash_internal.h,
	librdf/rdf_hash_memory.c, librdf/rdf_heuristics.c,
	librdf/rdf_heuristics.h, librdf/rdf_init.c, librdf/rdf_init.h,
	librdf/rdf_init_internal.h, librdf/rdf_internal.h,
	librdf/rdf_iterator.c, librdf/rdf_iterator.h,
	librdf/rdf_iterator_internal.h, librdf/rdf_list.c,
	librdf/rdf_list.h, librdf/rdf_list_internal.h, librdf/rdf_log.c,
	librdf/rdf_log.h, librdf/rdf_log_internal.h, librdf/rdf_model.c,
	librdf/rdf_model.h, librdf/rdf_model_internal.h,
	librdf/rdf_model_storage.c, librdf/rdf_node.c, librdf/rdf_node.h,
	librdf/rdf_node_internal.h, librdf/rdf_parser.c,
	librdf/rdf_parser.h, librdf/rdf_parser_internal.h,
	librdf/rdf_parser_raptor.c, librdf/rdf_query.c,
	librdf/rdf_query.h, librdf/rdf_query_internal.h,
	librdf/rdf_query_rasqal.c, librdf/rdf_query_results.c,
	librdf/rdf_query_triples.c, librdf/rdf_serializer.c,
	librdf/rdf_serializer.h, librdf/rdf_serializer_internal.h,
	librdf/rdf_serializer_raptor.c, librdf/rdf_statement.c,
	librdf/rdf_statement.h, librdf/rdf_statement_internal.h,
	librdf/rdf_storage.c, librdf/rdf_storage.h,
	librdf/rdf_storage_file.c, librdf/rdf_storage_hashes.c,
	librdf/rdf_storage_internal.h, librdf/rdf_storage_list.c,
	librdf/rdf_storage_mysql.c, librdf/rdf_storage_postgresql.c,
	librdf/rdf_storage_sql.c, librdf/rdf_storage_sql_test.c,
	librdf/rdf_storage_sqlite.c, librdf/rdf_storage_trees.c,
	librdf/rdf_storage_tstore.c, librdf/rdf_stream.c,
	librdf/rdf_stream.h, librdf/rdf_stream_internal.h,
	librdf/rdf_types.h, librdf/rdf_uri.c, librdf/rdf_uri.h,
	librdf/rdf_uri_internal.h, librdf/rdf_utf8.c, librdf/rdf_utf8.h,
	librdf/redland.h, librdf/win32_rdf_config.h: 2008

	* examples/Makefile.am, utils/db_upgrade.c, utils/rdfproc.1,
	Redland.i, data/Makefile.am, demos/demo.pl, demos/ntriples.pl,
	demos/parser-tests.pl, examples/example1.c, examples/example3.c,
	examples/example4.c, examples/example5.c, examples/example6.c,
	examples/example7.c, librdf/Makefile.am, librdf/librdf.h,
	librdf/rdf_concepts.c, librdf/rdf_concepts.h,
	librdf/rdf_concepts_internal.h, librdf/rdf_digest.c,
	librdf/rdf_digest.h, librdf/rdf_digest_internal.h,
	librdf/rdf_digest_md5.c, librdf/rdf_digest_openssl.c,
	librdf/rdf_digest_sha1.c, librdf/rdf_files.c, librdf/rdf_files.h,
	librdf/rdf_hash.c, librdf/rdf_hash.h, librdf/rdf_hash_bdb.c,
	librdf/rdf_hash_cursor.c, librdf/rdf_hash_internal.h,
	librdf/rdf_hash_memory.c, librdf/rdf_heuristics.c,
	librdf/rdf_heuristics.h, librdf/rdf_init.h,
	librdf/rdf_init_internal.h, librdf/rdf_internal.h,
	librdf/rdf_iterator.c, librdf/rdf_iterator.h,
	librdf/rdf_iterator_internal.h, librdf/rdf_list.c,
	librdf/rdf_list.h, librdf/rdf_list_internal.h, librdf/rdf_log.c,
	librdf/rdf_log.h, librdf/rdf_log_internal.h, librdf/rdf_model.c,
	librdf/rdf_model.h, librdf/rdf_model_internal.h,
	librdf/rdf_model_storage.c, librdf/rdf_node.c, librdf/rdf_node.h,
	librdf/rdf_node_internal.h, librdf/rdf_parser.c,
	librdf/rdf_parser.h, librdf/rdf_parser_internal.h,
	librdf/rdf_parser_raptor.c, librdf/rdf_query.c,
	librdf/rdf_query.h, librdf/rdf_query_internal.h,
	librdf/rdf_query_rasqal.c, librdf/rdf_query_results.c,
	librdf/rdf_query_triples.c, librdf/rdf_serializer.c,
	librdf/rdf_serializer.h, librdf/rdf_serializer_internal.h,
	librdf/rdf_serializer_raptor.c, librdf/rdf_statement.c,
	librdf/rdf_statement.h, librdf/rdf_statement_internal.h,
	librdf/rdf_storage.c, librdf/rdf_storage.h,
	librdf/rdf_storage_file.c, librdf/rdf_storage_hashes.c,
	librdf/rdf_storage_internal.h, librdf/rdf_storage_list.c,
	librdf/rdf_storage_mysql.c, librdf/rdf_storage_postgresql.c,
	librdf/rdf_storage_sql.c, librdf/rdf_storage_sql_test.c,
	librdf/rdf_storage_sqlite.c, librdf/rdf_storage_trees.c,
	librdf/rdf_storage_tstore.c, librdf/rdf_stream.c,
	librdf/rdf_stream.h, librdf/rdf_stream_internal.h,
	librdf/rdf_types.h, librdf/rdf_uri.c, librdf/rdf_uri.h,
	librdf/rdf_uri_internal.h, librdf/rdf_utf8.c, librdf/rdf_utf8.h,
	librdf/redland.h, redland-config.in, utils/getopt.c,
	utils/rdfproc.c, utils/rdfproc_getopt.h,
	utils/redland-db-upgrade.1: Remove old CVS Id: from sources

	* configure.ac: boost RASQAL_MAX_VERSION to 0.9.99 to allow for
	future compatible versions

2008-06-22  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_query_rasqal.c: (rasqal_literal_to_redland_node):
	RASQAL_LITERAL_FLOATING removed from Rasqal API in r14084,
	replaced with RASQAL_LITERAL_DOUBLE.

	* librdf/rdf_parser_raptor.c: indent tabs->spaces

2008-06-20  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_parser_raptor.c:
	(librdf_parser_raptor_parse_file_handle_as_stream): Take a
	close_fh flag, remove world arg to match factory method.  Use
	world from parser object.
	(librdf_parser_raptor_parse_into_model_common): Renamed from
	librdf_parser_raptor_parse_uri_into_model_common and also take a
	FILE* to use if URI and string are NULL.
	(librdf_parser_raptor_parse_file_handle_into_model): Added
	(librdf_parser_raptor_parse_counted_string_into_model): Use
	librdf_parser_raptor_parse_into_model_common
	(librdf_parser_raptor_register_factory): Register
	librdf_parser_raptor_parse_file_handle_as_stream and
	librdf_parser_raptor_parse_file_handle_into_model

	* librdf/rdf_parser.c: (librdf_parser_parse_file_handle_as_stream,
	librdf_parser_parse_file_handle_into_model): Added.

	* librdf/rdf_parser_internal.h: struct librdf_parser_factory_s
	gains parse_file_handle_into_model and parse_file_handle_as_stream
	methods

	* librdf/rdf_parser.h: Added
	librdf_parser_parse_file_handle_as_stream and
	librdf_parser_parse_file_handle_into_model

2008-06-15  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_concepts.c: (main):
	librdf_get_concept_resource_by_index returns a librdf_node, not
	librdf_uri

	* librdf/rdf_storage_trees.c: (librdf_storage_trees_node_compare):
	Use char* pointer subtraction.

	* librdf/rdf_avltree.c: (librdf_avltree_dump): Use %zd for size_t
	(librdf_avltree_print_node): Not need unless LIBRDF_DEBUG > 1
	(librdf_avltree_node_rightmost): Not needed yet.

	* librdf/rdf_storage_mysql.c:
	(librdf_storage_mysql_node_hash_common): Init pointer datatype to
	NULL [sparse]l

	* librdf/rdf_storage_trees.c: (librdf_storage_trees_node_compare):
	Try to avoid what gcc calls "potentially expensive pointer subtraction"
	(librdf_statement_compare_spo, librdf_statement_compare_sop,
	librdf_statement_compare_ops, librdf_statement_compare_pso,
	librdf_storage_trees_avl_free): Declare static.

	* librdf/rdf_avltree.c: (librdf_avltree_dump): Use %z for size_t
	(librdf_avltree_check_node): Not need unless LIBRDF_DEBUG > 1
	(librdf_avltree_node_prev): Not used yet

	* librdf/rdf_hash_memory.c: (librdf_hash_memory_cursor_init):
	Should be declared static. [sparse]

	* librdf/rdf_node.c: (librdf_node_get_literal_value_datatype_uri):
	Return NULL [sparse]

	* configure.ac, librdf/rdf_types.h: Use autoconf 2.5.x
	AC_CHECK_TYPES for byte u32 and u64

2008-06-13  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_model.c: (librdf_model_add_statement): Remove
	contains statement check since it is already part of the storage
	add statement API and it can be expensive.

2008-06-12  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_parser_raptor.c:
	(librdf_raptor_new_uri_for_rdf_concept): Prevent use of NULL uri

2008-06-11  Dave Beckett <dave@dajobe.org>

	* librdf/Makefile.am: Add rdf_avltree.h to dist

	* librdf/rdf_serializer_raptor.c:
	(librdf_serializer_raptor_serialize_stream_to_counted_string):
	Revert r13840: remove call to raptor_free_iostream() as
	raptor_serialize_start has old (<1.4.18) semantics again.

2008-06-10  Dave Beckett <dave@dajobe.org>

	* examples/rss2atom.c: my ns

	* examples/Makefile.am, examples/rss2atom.c: Added rss2atom example

2008-05-21  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_iterator.c, librdf/rdf_iterator_internal.h,
	librdf/rdf_stream.c, librdf/rdf_stream_internal.h: Allow
	get_context calls in stream/iterator map functions. Use
	is_updating flag to prevent infinite looping.
	Originally reported in
	http://lists.usefulinc.com/pipermail/redland-dev/2008-May/001756.html

2008-05-19  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_model.c: (test_model_cloning): Use parametrized
	storage type for message

2008-05-19  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_model_storage.c:
	(librdf_model_storage_find_statements_in_context): Added to use
	storage factory method find_statements_in_context if it exists

	* librdf/rdf_model.c: Get the storage parameters from envariables
	for testing

2008-05-06  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage.c: (librdf_init_storage): Do not init trees
	storage unless STORAGE_TREES is defined.
	(main): Do not test trees storage unless STORAGE_TREES is defined.

	* librdf/rdf_stream.c: (librdf_stream_update_current_statement):
	Fixed comment

	* librdf/rdf_iterator.c: (librdf_iterator_update_current_element):
	Fixed iterator map function callback
	params. http://lists.usefulinc.com/pipermail/redland-dev/2008-May/001756.html

	* librdf/rdf_serializer_raptor.c:
	(librdf_serializer_raptor_serialize_stream_to_counted_string):
	Memory leak fix - raptor_serializer does not take ownership of the
	passed in raptor_iostream anymore after r13820

	* librdf/rdf_log.c: (librdf_log): Resiliency fix: avoid
	raptor_free_memory(0)

	* librdf/rdf_avltree.c: (librdf_avltree_print): Compiler warning
	fix: initialize rv before use.

2008-05-05  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_stream.c: (librdf_stream_from_node_iterator_get_statement):
	Removed useless and incorrect typecast.

2008-04-23  Dave Robillard <dave@drobilla.net>

	* configure.ac, docs/storage.html, librdf/Makefile.am,
	librdf/rdf_avltree.c, librdf/rdf_avltree.h, librdf/rdf_storage.c,
	librdf/rdf_storage_internal.h, librdf/rdf_storage_trees.c: Add new
	in-memory store, "trees".
	(librdf_storage_find_statements): Test for storage methods before
	triple pattern
	(less comparisons via short circuiting for storages without find_arcs etc.).

2008-04-03  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_storage_mysql.c,
	librdf/rdf_storage_postgresql.c:
	(librdf_storage_mysql_init,librdf_storage_postgresql_init): Do not
	call terminate factory method on failure, caller will do that

2008-03-27  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_parser_raptor.c,
	librdf/rdf_serializer_raptor.c: (librdf_parser_raptor_set_feature,
	librdf_serializer_raptor_set_feature): Use
	raptor_parser_set_feature_string and
	raptor_serializer_set_feature_string to set feature values to
	integer or string as appropriate.

2008-03-04  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_concepts.c:
	(librdf_init_concepts,librdf_finish_concepts): Init/finish also
	the last concept (rdfs:subPropertyOf).
	(main): Added test for LIBRDF_CONCEPT_LAST uri.

2008-03-03  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_concepts.c, librdf/rdf_concepts.h: Source
	compatibility break: Fixed LIBRDF_URI_RDF_MS,
	LIBRDF_URI_RDF_SCHEMA public API macros broken in r13171.
	(librdf_get_concept_ms_namespace,librdf_get_concept_schema_namespace):
	Added two new getters to make the API macros work - cannot access
	librdf_world_s members outside the API.

2008-02-28  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage.c: (librdf_storage_add_statement): fixed
	comment

2008-02-16  Dave Beckett <dave@dajobe.org>

	* autogen.sh, autogen.sh, autogen.sh, autogen.sh, autogen.sh:
	autogen checks when env prog version is empty. Update all packages
	to latest autogen.sh

2008-02-07  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_serializer_raptor.c:
	(librdf_serializer_raptor_serialize_stream_to_counted_string):
	Fixed memory leak. Ensure any string placed to the passed in
	string pointer by raptor_write_string_iostream_finish() is freed
	if not returned to caller.

	* librdf/rdf_serializer_raptor.c:
	(librdf_serializer_raptor_serialize_stream_to_counted_string):
	Should not free passed in stream.

	* librdf/rdf_query_rasqal.c:
	(librdf_query_rasqal_query_results_update_statement): Check for
	statement node allocation failures.

2008-01-14  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_serializer.c:
	(librdf_serializer_serialize_stream_to_counted_string) Docs

	* autogen.sh: Do not branch autogen.sh scripts but keep them identical

2008-01-13  Dave Beckett <dave@dajobe.org>

	* autogen.sh: automake 1.0 docs

2008-01-10  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_query_rasqal.c: (librdf_query_rasqal_constructor) Die
	with a fatal error if rasqal_new_world() returns NULL, do not
	leave the system in a partially initialized state.

	* utils/rdfproc.c: Updated rdfproc to new rasqal api

	* librdf/rdf_query_rasqal.c, librdf/rdf_query_results.c: Updated
	to new rasqal apis.

	* librdf/rdf_query_rasqal.c: (redland_node_to_rasqal_literal)
	Updated to new rasqal literal API.

2008-01-09  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_query_rasqal.c: (librdf_query_rasqal_constructor) Use
	non-deprecated rasqal_set_triples_source_factory2().

	* librdf/rdf_query_rasqal.c, librdf/rdf_query_results.c: Updated
	to non-deprecated rasqal query results API.

	* librdf/rdf_init_internal.h, librdf/rdf_query_rasqal.c: Renamed
	rasqal_query variable to rasqal_query_ptr to prevent type<->name
	problems in C++.

2008-01-07  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_init_internal.h, librdf/rdf_query.c,
	librdf/rdf_query_internal.h, librdf/rdf_query_rasqal.c: Changed
	rdf_query_rasqal to use non-deprecated rasqal functions with
	rasqal_world support.

2008-01-03  Lauri Aalto <laalto@iki.fi>

	* utils/rdfproc.c: Replaced call to removed function
	rasqal_query_results_formats_enumerate_full() with
	rasqal_query_results_formats_enumerate().

	* librdf/rdf_query_results.c: (librdf_query_results_formats_enumerate)
	Replaced call to removed function
	rasqal_query_results_formats_enumerate_full() with
	rasqal_query_results_formats_enumerate().

2007-12-28  Dave Beckett <dave@dajobe.org>

	* NEWS.html, RELEASE.html, configure.ac,
	librdf/win32_rdf_config.h: Bump version to 1.0.8.
	Require rasqal 0.9.16

2007-12-24  Dave Beckett <dave@dajobe.org>

	* Snapshotted redland_1_0_7 for 1.0.7 release (SVN 13317)

2007-12-23  Dave Beckett <dave@dajobe.org>

	* docs/Makefile.am, docs/redland-chapter-storage-modules.xml,
	docs/redland-chapter-storage.xml, docs/redland-docs.xml: Renamed
	redland-chapter-storage.xml

	* docs/Makefile.am, docs/redland-chapter-storage.xml,
	docs/redland-docs.xml: Added redland-chapter-storage.xml

	* docs/storage.html: xhtml

	* docs/Makefile.am: Update CLEANFILES

	* docs/tmpl/concepts.sgml, docs/tmpl/parser.sgml,
	docs/tmpl/storage.sgml, docs/tmpl/uri.sgml: docs

2007-12-21  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_stream.c: (librdf_stream_add_map) Clarified map
	function docs.

2007-12-20  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_sqlite.c: (librdf_storage_sqlite_get_next_common,
	librdf_storage_sqlite_get_next_context_common): Make stream
	finished on alloc failure.

	* librdf/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_context_add_statement):
	Fix stringbuffer-related leaks introduced in a previous commit.

	* librdf/rdf_storage_sqlite.c: (librdf_storage_sqlite_serialise,
	librdf_storage_sqlite_find_statements,
	librdf_storage_sqlite_context_serialise,
	librdf_storage_sqlite_get_contexts): Make sure sqlite is not passed
	in NULL sql string. Refactor freeing sql stringbuffers.

	* librdf/rdf_storage_sqlite.c: (librdf_storage_sqlite_add_statements,
	librdf_storage_sqlite_contains_statement,
	librdf_storage_sqlite_serialise,
	librdf_storage_sqlite_context_add_statement,
	librdf_storage_sqlite_context_remove_statement,
	librdf_storage_sqlite_context_remove_statements,
	librdf_storage_sqlite_context_serialise): Check for stringbuffer
	alloc failures.

	* librdf/rdf_storage_sqlite.c: (librdf_storage_sqlite_open): Check
	for errors/alloc failures and clean up as needed.

	* librdf/rdf_storage_sqlite.c: (librdf_storage_sqlite_set_helper,
	librdf_storage_sqlite_get_helper,
	librdf_storage_sqlite_uri_helper,
	librdf_storage_sqlite_blank_helper,
	librdf_storage_sqlite_literal_helper): Resiliency fixes: check for
	alloc failures and clean up on error.

	* librdf/rdf_storage_sqlite.c: (librdf_storage_sqlite_exec):
	Resiliency fixes:
	- Don't close the sqlite db on error, we are probably going to
	need it later and we don't want sqlite to segfault on NULL db.
	- Return an error if passed in a NULL request.
	- Memory leak fix: free the dynamically allocated error message
	string (if any) from v2 sqlite_exec() or v3 legacy support
	sqlite3_exec().
	- Check for alloc failures.
	(- Fixed indent.)

	* librdf/rdf_storage_sqlite.c: (sqlite_string_escape) Check for
	alloc failure

	* librdf/rdf_storage_sqlite.c: (librdf_storage_sqlite_init) Make
	sure options hash is always freed.

	* librdf/rdf_hash.c, librdf/rdf_iterator.c, librdf/rdf_list.c,
	librdf/rdf_node.c, librdf/rdf_storage.c,
	librdf/rdf_storage_hashes.c, librdf/rdf_storage_list.c,
	librdf/rdf_storage_mysql.c, librdf/rdf_storage_postgresql.c,
	librdf/rdf_storage_sqlite.c: Reverted librdf_new_iterator()
	context ownership changes from r12988 and r12989. Do not call
	finished method in librdf_new_iterator() if iterator allocation
	fails. Caller should discard the memory.

	Motivation: Make the API contract similar to librdf_new_stream()
	and do not break old code.

2007-12-18  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_query_internal.h: Use RASQAL_H and not RASQAL_API to
	check whether rasqal.h has been included. RASQAL_API may be
	defined outside rasqal.h.

2007-12-17  Dave Beckett <dave@dajobe.org>

	* librdf/redland.spec.in: updates to rpm config

2007-12-16  Dave Beckett <dave@dajobe.org>

	* librdf/redland.spec.in: rasqal-devel fixes

	* configure.ac: sh

	* configure.ac, librdf/redland.pc.in, librdf/redland.spec.in:
	Added RASQAL_MAX_VERSION with 0.9.15 since rasqal API will change
	next time

	* librdf/rdf_parser.c: autodoc

	* librdf/rdf_concepts.c: autodoc

	* docs/redland-sections.txt: Add 11 funcs/handlers

	* docs/redland-sections.txt: Remove
	librdf_concept_ms_namespace_uri
	librdf_concept_schema_namespace_uri

	* librdf/rdf_iterator.h, librdf/rdf_stream.h: autodocs

	* librdf/Makefile.am: tweak cleanfiles

	* docs/tmpl/redland-unused.sgml, docs/tmpl/unused.sgml: docs

	* librdf/rdf_storage.c: (main): Just warn if a storage cannot be
	created - databases may not be running.

	* librdf/Makefile.am: Try using librdf_la_LDFLAGS rather than AM_LDFLAGS

	* configure.ac: Do not apply modular storage params to LIBRDF_LIBS twice

	* librdf/rdf_query_internal.h: Make this include work when
	rasqal.h has been included first - conditionalise defining
	rasqal_query_results_formatter typedef.

2007-12-12  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_contains_statement): Added FIXME note about
	inserting new data when just testing for statement existence.

	* librdf/rdf_storage_sqlite.c: Added transaction support to sqlite
	storage. Run sqlite operations in a transaction unless one is
	already active.
	(librdf_storage_sqlite_context): Added in_transaction flag.
	(librdf_storage_sqlite_open,
	librdf_storage_sqlite_contains_statement,
	librdf_storage_sqlite_context_add_statement,
	librdf_storage_sqlite_query_flush): Use
	librdf_storage_sqlite_transaction_* functions for
	transactions. Roll back on errors, do not commit.
	(librdf_storage_sqlite_add_statements): Wrap operation in a
	transaction unless one is already active.
	(librdf_storage_sqlite_transaction_start,
	librdf_storage_sqlite_transaction_commit,
	librdf_storage_sqlite_transaction_rollback): Added new storage API
	implementation functions.
	(librdf_storage_sqlite_register_factory): Register transaction
	callbacks.

	* librdf/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_contains_statement):
	Bug fix: contains_statement() should also find statements with
	blank subject node.

2007-12-03  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_sqlite.c: (librdf_storage_sqlite_serialise,
	librdf_storage_sqlite_find_statements,
	librdf_storage_sqlite_context_serialise): Fix crashes e.g. if sql
	compilation fails. scontext->storage needs to be initialized
	before calling librdf_storage_sqlite_*_finished().

2007-11-29  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_get_1int_callback): Avoid atoi(NULL) crashes.

	* librdf/rdf_query_internal.h: Declare
	rasqal_query_results_formatter - can now include librdf.h with
	LIBRDF_INTERNAL without including redland.h/rasqal.h.

2007-11-26  Dave Beckett <dave@dajobe.org>

	* autogen.sh: fix to handle OSX using glibtoolize for libtoolize

2007-11-23  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_sqlite.c: Removed writable static data.

	* librdf/rdf_storage_sqlite.c: (librdf_storage_sqlite_init):
	Removed unused variable is_new.
	(librdf_storage_sqlite_open): On error, do not leave dangling
	context->db.

2007-11-22  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_stream.c: indent tabs->spaces

	* librdf/rdf_query_internal.h: Revert r13241 - was not portable

	* librdf/rdf_query_internal.h: Forward declare
	rasqal_query_results_formatter - can now include librdf.h with
	LIBRDF_INTERNAL without including redland.h/rasqal.h.

2007-11-20  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_digest.c: (librdf_get_digest_factory): Remove
	redundant code. Style & indent fixes.

2007-11-19  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_log.h: comment punctuation

	* librdf/rdf_storage_list.c: (librdf_storage_list_find_statements):
	Lowmem leak fix: clean up and return NULL if
	librdf_stream_add_map() fails.

	* librdf/rdf_stream.c: (librdf_stream_update_current_statement):
	Lowmem leak fix: return end-of-stream if map iterator alloc fails.

2007-11-14  Dave Beckett <dave@dajobe.org>

	* configure.ac: Require raptor 1.4.16 rasqal 0.9.15

2007-11-12  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_parser_raptor.c: Make raptor_uri_handlers const.

	* librdf/rdf_concepts.c, librdf/rdf_concepts.h,
	librdf/rdf_init_internal.h, librdf/rdf_node.c: Remove writable
	static data from rdf_concepts - move variables to librdf_world
	struct.

	SOURCE COMPATIBILITY BREAK: rdf_concepts.h public API node/uri
	macros now require a librdf_world* parameter.

	(librdf_get_concept_resource_by_index,
	librdf_get_concept_resource_by_index): Added two new API functions
	required by rdf_concepts.h public API macros.
	(librdf_init_concepts_init, librdf_finish_concepts): Remove
	librdf_concepts_usage reference counting workaround - no longer
	needed.
	(librdf_new_node_from_literal,
	librdf_node_get_literal_value_is_wf_xml, librdf_node_decode): Pass
	world object pointer to rdf concepts macros.

2007-11-07  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_concepts.c: Remove writable static data. Make const
	namespace strings const.

2007-11-06  Lauri Aalto <laalto@iki.fi>

	* librdf/librdf.h: Allow REDLAND_API to be externally defined
	e.g. in a static config.h. Remove __SYMBIAN32__ case.

	* librdf/rdf_init.c: Remove writable static data. Allow flagging
	out old RDF_World stuff with NO_STATIC_DATA.

	* librdf/rdf_parser_raptor.c: Remove writable static bss. Make
	raptor_uri_handler const

	* librdf/rdf_parser_raptor.c, librdf/rdf_query_rasqal.c,
	librdf/rdf_serializer_raptor.c: Remove writable static bss. Make
	buffers stack-based.

	* librdf/rdf_statement.c: Remove writable static data. Make
	null_string pointer const.

	* librdf/rdf_log.c: Remove writable static data. Make
	log_level_names array const.

2007-10-31  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_internal.h: Remove duplicate declaration of
	librdf_init_storage_sqlite()

	* librdf/rdf_storage.c, librdf/rdf_storage.h,
	librdf/rdf_storage_internal.h: Make librdf_storage_add_reference()
	and librdf_storage_remove_reference() LIBRDF_API functions to
	enable calling from external storage modules on systems that
	require explicit function exports.

2007-10-25  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_query_results.c: (librdf_query_results_to_counted_string):
	Do not leak string on errors.

2007-10-23  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_node.c: (librdf_new_node_from_typed_counted_literal):
	Free xml_language copy on buffer alloc failure

	* librdf/rdf_node.c: (librdf_new_node_from_blank_identifier): On
	error, free identifier generated with librdf_world_get_genid(). No
	need to copy generated id.

	* librdf/rdf_parser_raptor.c:
	(librdf_parser_raptor_generate_id_handler):
	Fix lowmem leaks - always free user_bnodeid, return NULL if
	hash_put fails.

	* librdf/rdf_parser_raptor.c:
	(librdf_parser_raptor_generate_id_handler):
	Fix lowmem crash - do not put NULL value into hash

	* librdf/rdf_parser_raptor.c: (librdf_parser_raptor_init): Check
	for bnode_hash alloc failure

	* librdf/rdf_parser_raptor.c: (librdf_parser_raptor_namespace_handler):
	Check for alloc failure

	* librdf/rdf_parser_raptor.c: (librdf_parser_raptor_context):
	Lowmem leak fix. Store pointer to the stream context to enable
	cleaning it up through the parser object.

	* librdf/rdf_parser_raptor.c:
	(librdf_parser_raptor_parse_as_stream_common):
	Lowmem leak fixes. Store raptor_www pointer to parser context to
	allow resource cleanup from client code in case
	raptor_parse_chunk() fails in a lexer.

	* librdf/rdf_parser_raptor.c: (librdf_parser_raptor_stream_context):
	base_uri is not needed for anything - raptor copies and stores
	base_uri as needed.

	* librdf/rdf_parser.c: (librdf_parser_guess_name): Do not call
	strlen() with NULL arg.

	* librdf/rdf_parser_raptor.c: (librdf_parser_raptor_stream_context):
	source_uri is not needed for anything.

	* librdf/rdf_parser.c: indent tabs->spaces

	* librdf/rdf_parser_raptor.c:
	(librdf_parser_raptor_parse_file_handle_as_stream,
	librdf_parser_raptor_parse_as_stream_common,
	librdf_parser_raptor_parse_into_model_common): Check for alloc
	failures

2007-10-22  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_uri.c: (librdf_new_uri_from_uri_local_name): No need
	to calloc strings, use malloc instead.

	* librdf/rdf_digest.c, librdf/rdf_hash.c, librdf/rdf_model.c,
	librdf/rdf_parser.c, librdf/rdf_query.c, librdf/rdf_serializer.c,
	librdf/rdf_storage.c: (librdf_digest_register_factory,
	librdf_hash_register_factory, librdf_model_register_factory,
	librdf_parser_register_factory, librdf_query_register_factory,
	librdf_serializer_register_factory,
	librdf_storage_register_factory): No need to calloc strings, use
	malloc instead.

	* librdf/rdf_concepts.c: (librdf_finish_concepts): Prevent calling
	librdf_free_node() with NULL node.

	* librdf/rdf_digest.c, librdf/rdf_hash.c, librdf/rdf_model.c,
	librdf/rdf_parser.c, librdf/rdf_query.c, librdf/rdf_serializer.c,
	librdf/rdf_storage.c: (librdf_storage_register_factory,
	librdf_parser_register_factory, librdf_model_register_factory):
	Low-memory fixes: prevent calling the factory method on a stale
	factory if raptor_sequence_push() failed.

	(librdf_digest_register_factory, librdf_hash_register_factory,
	librdf_model_register_factory, librdf_parser_register_factory,
	librdf_query_register_factory, librdf_serializer_register_factory,
	librdf_storage_register_factory): Refactor all
	librdf_*_register_factory() functions to same style:
	- fail fast if factory already registered, alloc only if necessary
	- associate with librdf_world before calling the factory function
	to allow proper cleanup on factory failures
	- on error, use goto label for cleanup + oom reporting to make the
	code clearer and smaller
	- do not use intermediate local variables if they have no benefit

	* librdf/rdf_iterator.c, librdf/rdf_list.c, librdf/rdf_node.c,
	librdf/rdf_storage.c, librdf/rdf_storage_hashes.c,
	librdf/rdf_storage_list.c, librdf/rdf_storage_mysql.c,
	librdf/rdf_storage_postgresql.c, librdf/rdf_storage_sqlite.c:
	Prevent double deleting iterator context on error after r12988.
	(librdf_new_iterator): Document that ownership of context is taken.

	* librdf/rdf_iterator.c: (librdf_new_iterator): Free passed in
	context on alloc failure. Indent tabs->spaces.

	* utils/rdfproc.c: (commands): Fix warning about missing initializer

	* librdf/rdf_storage_file.c: (librdf_storage_file_init): Make sure
	options hash is always freed.

	* configure.ac: Set eol-style from native to LF - toolchain does
	not work with CRLF files.

2007-10-21  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_init.c: Require ltdl.h only with MODULAR_LIBRDF.

	* librdf/rdf_hash.c: (librdf_hash_get_all_iterator_finished): Fix
	low memory crash - check for NULL context->key.

2007-10-20  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_init.c: 2007

	* librdf/rdf_init_internal.h: (struct librdf_world_s): Add
	storage_modules and ltdl_opened always. Pad structure when not
	WITH_THREADS. Thus structure is always the same size.

	* librdf/rdf_storage.c: (librdf_storage_load_module): Renamed from
	librdf_load_storage_module

	* autogen.sh: Only add --ltdl to libtoolize_args if a configure
	program contains an AC_LIBLTDL_ macro.  Allows this script to
	shared between librdf, raptor and rasqal.

2007-10-19  Dave Robillard <dave@drobilla.net>

	* autogen.sh, configure.ac, librdf/Makefile.am, librdf/rdf_init.c,
	librdf/rdf_init_internal.h, librdf/rdf_storage.c,
	librdf/rdf_storage_sql_test.c: Modular (ie separate library)
	storage backends.
	(configure.ac): added --enable-modular.
	(librdf_load_storage_module): created.
	(librdf_init_storage): load modules, if --enable-modular is set.
	(librdf_finish_storage): close module if necessary.
	(rdf_storage_test): test all available storage backends.
	(librdf_new_world): initialise libltdl.
	(rdf_storage_sql_test): fix warning on 64-bit.

2007-10-19  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_hash.c: (librdf_new_hash_from_hash): Do not use hash
	after deleting it. No need to free NULL identifier.

	* librdf/rdf_model.c: indent tab -> spaces

	* librdf/rdf_log.c, librdf/rdf_node.c: (librdf_free_node) Roll
	back NULL check change from r12427 - the code is no longer trying
	to free NULL nodes. Makes the function consistent with other
	librdf_free_* functions.

2007-10-18  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_uri.c: (librdf_new_uri): Annotate uri string allocs as
	cstring and not librdf_uri.

	* librdf/rdf_storage_list.c: (librdf_storage_list_close): Remove
	unused variable.

	* librdf/rdf_storage_list.c: (librdf_storage_list_close):
	Low-memory memory leak fix. Freeing list items should not depend
	on being able to allocate an iterator. Replace list iterator with
	a pop loop.

2007-10-04  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_parser_raptor.c:
	(librdf_parser_raptor_new_statement_handler): Check for failures
	and log a fatal error if needed. Free statement if librdf_list_add
	fails.

2007-10-03  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_stream.c: (librdf_stream_add_map): Free context
	immediately on error.

	* librdf/rdf_storage_list.c: (librdf_storage_list_find_statements):
	Free query statement if it is not added to the stream map.

	* librdf/rdf_storage_list.c: (librdf_storage_list_serialise) Free
	allocated stream context if returning an empty stream with no
	context.

	* librdf/rdf_list.c: (librdf_list_get_iterator): Free iterator
	context if librdf_new_iterator() fails.

2007-10-01  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_model.c: (librdf_new_model_with_options): Use calloc
	instead of malloc for context.
	(main): rdf_model tests: Always run test_model_cloning (now it
	passes).
	(test_model_cloning): Fix copy-paste artifact when cloning a
	cloned model.

	* librdf/rdf_storage.c: (librdf_new_storage_from_storage): Set
	storage usage flag early to allow cleanup with
	librdf_free_storage().

	* librdf/rdf_storage_hashes.c: (librdf_storage_hashes_init_common):
	Store name to context and take ownership.
	(librdf_storage_hashes_terminate): Free owned name string.
	(librdf_storage_hashes_init): Create a copy of the name string -
	init_common takes ownership of it.
	(librdf_storage_hashes_clone): Remove unused variable + fix
	comments.
	Fixes Issue #0000229 http://bugs.librdf.org/mantis/view.php?id=229 .

2007-09-29  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_model.c: Added tests for
	librdf_new_model_from_model(). Tests fail and they are disabled by
	default. Related to
	Issue #0000229 http://bugs.librdf.org/mantis/view.php?id=229

	* librdf/rdf_storage_hashes.c: (librdf_storage_hashes_clone) Only
	copy old context name if it is non-NULL. Store options hash in
	new_context so that clone of a clone could also be possible.
	Fixes Issue #0000229 http://bugs.librdf.org/mantis/view.php?id=229
	but not all the additional issue in bug report notes.
	(librdf_storage_hashes_open): Do not destroy the options hash - it
	can be needed later if cloning the storage.

	* librdf/rdf_model.c: (librdf_new_model_from_model): Check factory
	clone() return value. Related to
	Issue #0000229 http://bugs.librdf.org/mantis/view.php?id=229

	* librdf/rdf_heuristics.c: (librdf_heuristic_gen_name): Defensive
	code: assert non-NULL name parameter.

2007-09-27  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_parser.c: (librdf_parser_register_factory): Check
	parsers sequence alloc failure. Push new parser to sequence before
	calling factory init - parser is cleaned up if factory init fails.
	(librdf_new_parser_from_factory): Check factory init return value
	and clean up on error.

	* librdf/rdf_list.c: (librdf_list_iterator_finished): No-op if
	iterator is NULL.

	* librdf/rdf_parser_raptor.c: (librdf_raptor_new_uri_for_rdf_concept):
	Check librdf_get_concept_by_name() return value.

2007-09-26  Dave Beckett <dave@dajobe.org>

	* autogen.sh: autogen.sh with perl version grep script

2007-09-26  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_serializer_raptor.c:
	(librdf_serializer_raptor_serialize_stream_to_counted_string,
	librdf_serializer_raptor_serialize_stream_to_iostream):
	Check librdf_serializer_raptor_serialize_statement() return value.

	* librdf, utils: Props: ignore .exes

2007-09-25  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_serializer_raptor.c:
	(librdf_serializer_raptor_serialize_statement):
	Check for serialize_statement return code. Fix log messages: print
	-> serialize.

2007-09-24  Lauri Aalto <laalto@iki.fi>

	* autogen.sh: Do not compare versions as decimal, e.g. automake
	1.10 should be treated newer than 1.7. 
	(update_prog_version) Convert [z.]x.y version strings to 100x+y.

2007-09-21  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_concepts.c: librdf_concepts: Check for alloc failures
	and clean up on errors. Workaround for
	Issue #0000213 http://bugs.librdf.org/mantis/view.php?id=213

	* librdf/rdf_serializer_raptor.c:
	(librdf_serializer_raptor_serialize_stream_to_file_handle):
	Clean up allocated resources on failure.

	* librdf/rdf_storage.c: rdf_storage: Check for alloc failures and
	clean up properly on failure.

	* librdf/rdf_serializer.c: rdf_serializer: Check for alloc
	failures and clean up properly on failure.

	* librdf/rdf_query_results.c: (librdf_query_results_to_counted_string):
	Fix compiler warning about type punning.

	* librdf/rdf_query_rasqal.c: rdf_query_rasqal: Check for alloc
	failures / return codes and clean up properly on failure.

	* librdf/rdf_query.c: rdf_query: Check for alloc failures and
	clean up properly on failure.

	* librdf/rdf_model.c: rdf_model: Check for alloc failures and
	clean up properly on failure.

	* librdf/rdf_node.c: (librdf_free_node) Hash deletion failure is
	not a fatal error.

	* librdf/rdf_serializer_raptor.c:
	(librdf_serializer_raptor_serialize_stream_to_counted_string)
	Fix compiler warning about type punning.

	* librdf/rdf_uri.c: (librdf_free_uri) Hash deletion failure is not
	a fatal error.
	(librdf_uri_compare) Fix typos in comments.

	* librdf/rdf_uri.c: (librdf_new_uri_from_uri_local_name) Indirect
	old_uri pointer only after making sure it's not NULL.

	* librdf/rdf_uri.c: (librdf_init_uri) Store uris_hash allocation
	status before potentially failing opening it.

	* librdf/rdf_hash.c: (librdf_new_hash_datum) Check for alloc
	failures.
	(librdf_new_hash_from_factory) Delete hash if factory init returns
	an error.

	* librdf/rdf_log.c: (librdf_log_simple) Do not abort() on fatal
	messages - leave it up to librdf_fatal() so it can free its
	buffers.
	(librdf_fatal) Ensure function never returns, even on alloc failure.

	* librdf/rdf_internal.h: rdf_internal.h: Allow LIBRDF_ASSERT_DIE
	to be externally defined e.g. in a makefile.

	* librdf/rdf_init.c: (librdf_new_world) Check for alloc failures

	* librdf/rdf_model_storage.c, librdf/rdf_stream.c: Fix typos in
	comments

	* librdf/rdf_hash_memory.c: Fix indent

	* Makefile.am, acinclude.m4, autogen.sh, data/Makefile.am,
	demos/Makefile.am, docs/Makefile.am, examples/Makefile.am,
	librdf/Makefile.am, librdf/win32/Makefile.am, utils/Makefile.am:
	Fix EOL issues when building svn version on cygwin.
	Partial fix to
	Issue #0000236 http://bugs.librdf.org/mantis/view.php?id=236

	* librdf/Makefile.am: Added $(EXEEXT)s to Makefiles to fix "make
	clean" on cygwin. Partial fix to
	Issue #0000235 http://bugs.librdf.org/mantis/view.php?id=235

	* autogen.sh: librdf autogen.sh $dir quoting. Partial fix to
	Issue #0000234 http://bugs.librdf.org/mantis/view.php?id=234

2007-09-16  Dave Beckett <dave@dajobe.org>

	* Redland.i, librdf/rdf_parser_raptor.c, librdf/rdf_uri.c,
	librdf/rdf_uri.h: (librdf_uri_compare): Added.  Used to implement
	librdf_raptor_uri_compare

	* librdf/rdf_parser_raptor.c: (struct librdf_raptor_uri_handler):
	Set URI Interface version to 2.

2007-09-15  Dave Robillard <dave@drobilla.net>

	* librdf/rdf_parser_raptor.c: (librdf_raptor_uri_handler): Move
	raptor_uri_compare to end of struct to match raptor_uri_handler.

	* librdf/rdf_parser_raptor.c: (librdf_raptor_uri_compare): Avoid
	strcmp if URIs are equal.  Fix string signedness warnings.

	* librdf/rdf_parser_raptor.c: (librdf_raptor_uri_compare):
	Overload raptor_uri_compare for librdf URIs.

2007-09-07  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_init_internal.h: Include pthread.h for use by struct
	Fixes Issue#0000230 http://bugs.librdf.org/mantis/view.php?id=230

2007-09-03  Dave Beckett <dave@dajobe.org>

	* examples/rss2ical.c: Use \r\n line endings like the spec
	says. Hello 1998!

2007-08-26  Dave Beckett <dave@dajobe.org>

	* docs/redland-docs.xml: add more boilerplate, copyrights

2007-08-24  Dave Beckett <dave@dajobe.org>

	* librdf/rdf_query.c: (librdf_query_execute): Fix asset for model
	param.
	Fixes Issue#0000218 http://bugs.librdf.org/mantis/view.php?id=218

2007-08-22  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_parser_raptor.c: (librdf_parser_raptor_relay_filter):
	Added to use in filtering URIs during a parse operation.
	(librdf_parser_raptor_parse_file_handle_as_stream,
	librdf_parser_raptor_parse_as_stream_common,
	librdf_parser_raptor_parse_into_model_common): Check URIs using
	raptor_parser_set_uri_filter to set a filter function.

	* librdf/rdf_parser.c: (librdf_parser_set_uri_filter): Added for
	setting a handler function to check URIs being parsed.
	(librdf_parser_get_uri_filter): Added for returning the current
	handler/data.

	* librdf/rdf_uri.h: Define librdf_uri_filter_func

	* librdf/rdf_parser.h: Added librdf_parser_set_uri_filter and
	librdf_parser_get_uri_filter

	* librdf/rdf_parser_internal.h: struct librdf_parser_s gains
	uri_filter_user_data and uri_filter

2007-08-18  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_node.c: (librdf_new_node_from_typed_counted_literal):
	Handle input value, xml_languge that are not necessarily NUL
	terminated, although they should be since they are C strings.
	Fixes Issue#0000215 http://bugs.librdf.org/mantis/view.php?id=215

	* configure.ac: BDB is up to 4.6 now

	* librdf/Makefile.am, librdf/rdf_init.c, librdf/rdf_model.c,
	librdf/rdf_node.c, librdf/rdf_parser.c, librdf/rdf_serializer.c,
	librdf/rdf_storage.c, librdf/rdf_uri.c: Fix setup/cleanup issues
	if library is initialised and then closed.  Added rdf_init_test
	test to run it.
	Fixes Issue#0000209 http://bugs.librdf.org/mantis/view.php?id=209

2007-08-17  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_query_rasqal.c: (librdf_query_rasqal_free_results_formatter):
	Free the librdf_query_results_formatter
	Fixes Issue#0000205 http://bugs.librdf.org/mantis/view.php?id=205


	* librdf/librdf.h: Applied librdf part of symbian portability fix
	for Issue#0000203
	http://bugs.librdf.org/mantis/view.php?id=203

2007-07-19  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_serializer.c: (librdf_serializer_set_namespace): Now
	with less typos

	* librdf/rdf_serializer.c: (librdf_serializer_set_namespace):
	Allow NULL uri and prefix to be given

2007-06-08  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_storage_mysql.c:
	(librdf_storage_mysql_transaction_commit): Run
	librdf_storage_mysql_transaction_terminate if there is nothing to
	do.

2007-05-26  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_uri.c: (librdf_uri_is_file_uri): Correct return value
	docs.
	Fixes Issue#0000189 http://bugs.librdf.org/mantis/view.php?id=189

	* librdf/librdf.h: Allow _declspec and __declspec
	Fixes Issue#0000188 http://bugs.librdf.org/mantis/view.php?id=188

2007-05-21  Dave Beckett  <dave@dajobe.org>

	* configure.ac: Add -Wformat-security

2007-05-09  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_query_results.c: (librdf_free_query_results_formatter):
	Do not try to return a value.
	Fixes Issue#0000187 http://bugs.librdf.org/mantis/view.php?id=187


	* configure.ac: mysql_cflags - make sure -O match is after
	whitespace.  Ditch trying to rip out linker junk from mysql_cflags

2007-05-06  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_hash.c: (librdf_hash_print, librdf_hash_print_keys,
	librdf_hash_print_values): Look at fwrite return value, it makes
	gcc happier.


	* NEWS.html, configure.ac, librdf/win32_rdf_config.h: Bump version
	to 1.0.7
	
2007-05-05  Dave Beckett  <dave@dajobe.org>

	* Snapshotted redland_1_0_6 for 1.0.6 release (SVN 12231)
	
	* librdf/redland.spec.in: Add /usr/share/redland/mysql-v1.ttl and
	/usr/share/redland/mysql-v2.ttl to redland package

	* librdf/rdf_parser_raptor.c:
	(librdf_parser_raptor_namespace_handler): Do not store namespaces
	with null URIs.
	
	* Redland.i: Add librdf_parser_get_namespaces_seen_prefix,
	librdf_parser_get_namespaces_seen_uri and
	librdf_parser_get_namespaces_seen_count

	* librdf/rdf_parser_raptor.c: (librdf_parser_raptor_namespace_handler):
	Handle NULL prefix, URIs

2007-05-04  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_parser_raptor.c: cast for C++

	* librdf/rdf_parser_raptor.c: librdf_parser_raptor_stream_context
	gains nspace_prefixes and nspace_uris sequences for storing
	namespaces seen.
	(librdf_parser_raptor_terminate): Free sequences.
	(librdf_parser_raptor_namespace_handler): Save namespaces prefixes
	and URIs seen in the new sequences.
	(librdf_parser_raptor_parse_file_handle_as_stream,
	librdf_parser_raptor_parse_as_stream_common,
	librdf_parser_raptor_parse_into_model_common): Reset/initialise
	namespace prefix/uri sequences before starting parsing.
	(librdf_parser_raptor_get_namespaces_seen_prefix,
	librdf_parser_raptor_get_namespaces_seen_uri,
	librdf_parser_raptor_get_namespaces_seen_count): Added to get the
	namespaces returned during a parsing.
	(librdf_parser_raptor_register_factory): Register new functions
	above.

	* librdf/rdf_parser.c: (librdf_parser_get_namespaces_seen_prefix,
	librdf_parser_get_namespaces_seen_uri,
	librdf_parser_get_namespaces_seen_count): Added to get the
	namespaces returned during a parsing.

	* librdf/rdf_parser.h: Added prototypes for
	librdf_parser_get_namespaces_seen_prefix,
	librdf_parser_get_namespaces_seen_uri and
	librdf_parser_get_namespaces_seen_count

	* librdf/rdf_parser_internal.h: struct librdf_parser_factory_s
	gains factory methods 
	const char* (*get_namespaces_seen_prefix)(void* context, int offset);
	librdf_uri* (*get_namespaces_seen_uri)(void* context, int offset);
	int (*get_namespaces_seen_count)(void* context);
	to get the namespaces seen during a parsing.

	* librdf/rdf_storage_mysql.c:
	(librdf_storage_mysql_transaction_commit): Commit statements in
	the sorted order, not reversed.  Fix off-by-1.

	* librdf/rdf_storage_mysql.c: pending_row now has a set strings
	with lengths.
	(librdf_storage_mysql_context): pending_inserts is now an array of
	raptor_sequence* of pending_rows.
	(compare_pending_rows): Compare using ints not memcmp for
	human understandable order.  Could go back to memcmp which would
	do different things based on the storage of u64 in memory (big,
	little endian)
	(free_pending-row): Added, now freeing strings too.
	(format_pending_row_sequence): Turn a sequence of pending rows for a
	table into the appropriate REPLACE INTO query.
	(librdf_storage_mysql_node_hash_common): Do not make query here, use
	new format_pending_row_sequence for immediate use, or queue it if in
	a transaction.
	(librdf_storage_mysql_transaction_start): init pending_inserts
	sequences.
	(librdf_storage_mysql_transaction_terminate): Free pending_inserts
	sequences.
	(librdf_storage_mysql_transaction_commit): Count pending_inserts
	sequences. sort the pending nodes rows before formatting with
	format_pending_row_sequence.

2007-05-02  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_storage_mysql.c: Batch up INSERTS to be 1 per table type.
	Replace INSERT INTO with REPLACE INTO for Resources, Literals,
	BNodes.
	Do nothing if there is no work to commit, not even start/commit.
	Table mysql_tables added to declare table names and fields.
	Lose all the SELECT HIGH_PRIORITY.
	(librdf_storage_mysql_node_hash_common): Renamed from
	librdf_storage_mysql_node_hash.
	(librdf_storage_mysql_get_node_hash,
	librdf_storage_mysql_store_node): Added as wrappers around the above.
	(librdf_storage_mysql_node_hash_common): Split into 'get hash' and
	'add hash' sections.  All queries are constructed with
	raptor_stringbuffer.  When in transaction, save for later, otherwise
	execute here as before.  Do not insert the same node twice in
	the same transaction.  LATER: Need to remember this is inserted
	outside a transaction too to prevent un-necessary SELECTs.
	(librdf_storage_mysql_context_add_statement_helper): Use new function
	names. When in transactions, save away statements hash u64 arrays
	a raptor_sequence of pending_row objects otherwise execute as before.
	(librdf_storage_mysql_transaction_start): Initialise the new hashes
	for nodes, pending_inserts stringbuffers, pending_statements sequence.
	(librdf_storage_mysql_transaction_terminate): Added to tidy up the
	new fields added above when a transaction is done.
	(librdf_storage_mysql_transaction_commit): If there is no pending
	node or statement to add, end without connecting.
	Otherwise for each node table, do one REPLACE INTO and for the
	statement table, do one INSERT INTO.
	(librdf_storage_mysql_transaction_rollback): use new
	librdf_storage_mysql_transaction_terminate to tidy up.

	* configure.ac: Move mysql flag munging to one place

	* utils/Makefile.am: (AM_CPPFLAGS): Put internal flags first

2007-05-01  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_hash.c: casts for C++

	* librdf/rdf_parser.c, librdf/rdf_parser_raptor.c,
	librdf/rdf_query_rasqal.c, librdf/rdf_storage_mysql.c,
	librdf/rdf_storage_sql.c: casts for C++

	* librdf/rdf_hash.c: Casts for C++

	* librdf/rdf_hash.c, librdf/rdf_hash.h:
	(librdf_hash_interpret_template): Do not use template as a
	function parameter name for C++

	* FAQS.html, INSTALL.html, LICENSE.html, NEWS.html, README.html,
	RELEASE.html, TODO.html: HTML hello UTF-8

	* redland-config.1: Document --private-libs and explain what it is
	under --libs too.

	* redland-config.in: Add --private-libs and move private libs to
	that from --libs


	* librdf/redland.pc.in: Use Libs.private for internal dynamically
	linked libraries

2007-04-30  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_model.c: (librdf_model_add_submodel): Invert test
	Fixes Issue#0000175 http://bugs.librdf.org/mantis/view.php?id=175

	* librdf/rdf_iterator.c, librdf/rdf_statement.c,
	librdf/rdf_storage.c, librdf/rdf_stream.c, librdf/rdf_uri.c:
	(main): Init library with world only, not librdf_init_CLASS

	* librdf/rdf_concepts.c: (main): Self contained test.

	* librdf/rdf_digest.c, librdf/rdf_hash.c, librdf/rdf_node.c:
	(main): Init library with world only, not librdf_init_CLASS

	* docs/redland-docs.xml: sgml IDs

	* Makefile.am: touch-mtime.pl

	* docs/redland-sections.txt: Add librdf_parser_guess_name add
	librdf_query_results_is_syntax

	* Makefile.am, RELEASE.html, configure.ac, utils/Makefile.am,
	utils/touch-mtime.c, utils/touch-mtime.pl: Remove touch-mtime
	program, use perl touch-mtime.pl

2007-04-23  Dave Beckett  <dave@dajobe.org>

	* configure.ac: min raptor 1.4.15

	* utils/rdfproc.c: Revert add_stream_count() and heuristics changes

	* librdf/rdf_model.c, librdf/rdf_serializer.c: Updates for rdf/xml
	output adding xml:base

	* NEWS.html, configure.ac, librdf/win32_rdf_config.h: Bump version
	to 1.0.6

	* librdf/rdf_utf8.c: (main): Run quietly when successful

2007-04-22  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_query_triples.c: (librdf_query_triples_init): Init
	context->statement.

	* autogen.sh: Update autogen.sh

2007-03-20  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_parser.c: (librdf_parser_guess_name): Guess a parser
	name from content using raptor_guess_parser_name.

	* librdf/rdf_parser.h: Added librdf_parser_guess_name

	* Redland.i: Added librdf_parser_guess_name

2007-03-14  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_parser_raptor.c:
	(librdf_parser_raptor_parse_as_stream_common): Send the accept
	header appropriate for the raptor parser.

2007-02-25  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_init.c: (librdf_new_world): Document how you should
	call librdf_world_open after, although the library will now do it
	for you.

	* librdf/rdf_concepts.c, librdf/rdf_digest.c, librdf/rdf_hash.c,
	librdf/rdf_init.c, librdf/rdf_init_internal.h,
	librdf/rdf_iterator.c, librdf/rdf_list.c, librdf/rdf_model.c,
	librdf/rdf_model_storage.c, librdf/rdf_node.c,
	librdf/rdf_parser.c, librdf/rdf_parser_raptor.c,
	librdf/rdf_query.c, librdf/rdf_query_results.c,
	librdf/rdf_serializer.c, librdf/rdf_serializer_raptor.c,
	librdf/rdf_statement.c, librdf/rdf_storage.c,
	librdf/rdf_storage_file.c, librdf/rdf_storage_hashes.c,
	librdf/rdf_storage_list.c, librdf/rdf_storage_mysql.c,
	librdf/rdf_storage_postgresql.c, librdf/rdf_storage_sql.c,
	librdf/rdf_storage_sqlite.c, librdf/rdf_storage_tstore.c,
	librdf/rdf_stream.c, librdf/rdf_uri.c: Add librdf_world_open() for
	every public API constructor or function that mentions
	librdf_world* and could have failed to run librdf_world_open()
	after librdf_new_world().  Fixes Issue#0000173
	http://bugs.librdf.org/mantis/view.php?id=173

	* librdf/rdf_query.h: Added librdf_query_results_is_syntax prototype.

2007-02-17  Dave Beckett  <dave@dajobe.org>

	* utils/rdfproc.1: Document -r/--results for query results formatting.

	* utils/rdfproc.c: Added -r/--results option to set query results
	formatter name.

	* docs/tmpl/hash.sgml, docs/tmpl/model.sgml,
	docs/tmpl/query_results.sgml, docs/tmpl/storage.sgml: Update for
	new transactions functions

	* librdf/rdf_parser.c, librdf/rdf_parser_internal.h,
	librdf/win32_rdf_config.h: Remove HAVE_RAPTOR_RDF_PARSER - always
	present now

	* librdf/Makefile.am: rdf_parser_raptor.c is always compiled

	* configure.ac: Remove --enable-parsers - raptor is always
	required and always used, whatever this setting is.  It is now
	passed onto raptor, if built internally, which *will* use it to
	configure the library contents.

2007-02-16  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_query_rasqal.c: (librdf_query_rasqal_results_to_counted_string,
	librdf_query_rasqal_results_to_file_handle): Removed old factory
	method impls
	(librdf_query_rasqal_results_is_syntax,
	librdf_query_rasqal_new_results_formatter,
	librdf_query_rasqal_new_results_formatter_by_mime_type,
	librdf_query_rasqal_free_results_formatter,
	librdf_query_rasqal_results_formatter_write): Added to implement
	new factory methods using rasqal_query_results_formatter
	(librdf_query_rasqal_constructor): Register all rasqal query
	results formats to be handled by this.

	* librdf/rdf_query_results.c: (librdf_query_results_to_counted_string,
	librdf_query_results_to_file_handle): Use query results formatter.
	(librdf_query_results_is_syntax): Added
	(librdf_new_query_results_formatter,
	librdf_new_query_results_formatter_by_mime_type,
	librdf_free_query_results_formatter,
	librdf_query_results_formatter_write): Added, based on new factory
	methods.  9librdf_query_results_formats_check,
	librdf_query_results_formats_enumerate): Added, calling rasqal
	directly.

	* librdf/rdf_query.h: Added prototypes for
	librdf_new_query_results_formatter,
	librdf_new_query_results_formatter_by_mime_type,
	librdf_free_query_results_formatter,
	librdf_query_results_formatter_write,
	librdf_query_results_formats_check and
	librdf_query_results_formats_enumerate

	* librdf/rdf_query_internal.h: Added
	librdf_query_results_formatter librdf_query_factory_s gains
	factory methods new_results_formatter,
	new_results_formatter_by_mime_type, free_results_formatter and
	results_formatter_write, results_is_syntax.  lose factory methods
	results_to_counted_string and results_to_file_handle

	* librdf/librdf.h: Added librdf_query_results_formatter

	* librdf/rdf_query_rasqal.c: (rasqal_redland_bind_match): Allow
	binding a NULL graph

2007-02-09  Dave Beckett  <dave@dajobe.org>

	* librdf/rdf_serializer.c: (librdf_get_serializer_factory):
	Default to serializer named "rdfxml" if nothing given to ensure we
	don't get another rdfxml serializer such as XMP.

	* librdf/rdf_serializer.c: (librdf_get_serializer_factory): Fix
	negative test for uri inequality.

	* librdf/rdf_parser.c: (librdf_get_parser_factory): Fix negative
	test for uri inequality.

2007-01-26  Dave Beckett  <dave@dajobe.org>

	* Makefile.am: Revert touch -r change as it just creates a file
	called '-r' (reopen http://bugs.librdf.org/mantis/view.php?id=159)

	* Makefile.am: Reverse use of touch -r since it seems to fail on
	Solaris.  Fixes http://bugs.librdf.org/mantis/view.php?id=159

2007-01-23  Dave Beckett  <dave@dajobe.org>

	* configure.ac: RASQAL_MIN_VERSION 0.9.14

	* librdf/rdf_storage.c: (librdf_storage_node_stream_to_node_create):
	Allow copying NULL node1 and node2.
