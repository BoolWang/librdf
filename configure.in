dnl -*- Mode: sh -*-
dnl
dnl configure.in - top level autoconf file for Redland
dnl (Process this file with autoconf to produce a configure script.)
dnl
dnl $Id$
dnl
dnl Copyright (C) 2000-2001 David Beckett - http://purl.org/net/dajobe/
dnl Institute for Learning and Research Technology - http://www.ilrt.org/
dnl University of Bristol - http://www.bristol.ac.uk/
dnl 
dnl This package is Free Software or Open Source available under the
dnl following licenses (these are alternatives):
dnl   1. GNU Lesser General Public License (LGPL)
dnl   2. GNU General Public License (GPL)
dnl   3. Mozilla Public License (MPL)
dnl 
dnl See LICENSE.html or LICENSE.txt at the top of this package for the
dnl full license terms.
dnl 
dnl 


AC_REVISION($Revision$)dnl

AC_PREREQ(2.13)
AC_INIT(rdf_node.c)
AM_CONFIG_HEADER(rdf_config.h)
AC_CANONICAL_HOST


LIBRDF_VERSION_MAJOR=0
LIBRDF_VERSION_MINOR=9
LIBRDF_VERSION_RELEASE=11
LIBRDF_VERSION=$LIBRDF_VERSION_MAJOR.$LIBRDF_VERSION_MINOR.$LIBRDF_VERSION_RELEASE
LIBRDF_VERSION_INFO=`expr $LIBRDF_VERSION_MAJOR + $LIBRDF_VERSION_MINOR`:$LIBRDF_VERSION_RELEASE:$LIBRDF_VERSION_MINOR

LIBRDF_VERSION_NUMBER=`expr $LIBRDF_VERSION_MAJOR \* 10000 + $LIBRDF_VERSION_MINOR \* 100 + $LIBRDF_VERSION_RELEASE`

AC_SUBST(LIBRDF_VERSION_MAJOR)
AC_SUBST(LIBRDF_VERSION_MINOR)
AC_SUBST(LIBRDF_VERSION_RELEASE)
AC_SUBST(LIBRDF_VERSION)
AC_SUBST(LIBRDF_VERSION_INFO)
AC_SUBST(LIBRDF_VERSION_NUMBER)
AC_DEFINE_UNQUOTED(LIBRDF_VERSION_MAJOR, $LIBRDF_VERSION_MAJOR)
AC_DEFINE_UNQUOTED(LIBRDF_VERSION_MINOR, $LIBRDF_VERSION_MINOR)
AC_DEFINE_UNQUOTED(LIBRDF_VERSION_RELEASE, $LIBRDF_VERSION_RELEASE)

VERSION=${LIBRDF_VERSION}

AM_INIT_AUTOMAKE(redland, $VERSION)


# Libtool versioning
#
# CURRENT
#      The most recent interface number that this library implements.
# 
# REVISION
#      The implementation number of the CURRENT interface.
# 
# AGE
#      The difference between the newest and oldest interfaces that this
#      library implements.  In other words, the library implements all the
#      interface numbers in the range from number `CURRENT - AGE' to
#      `CURRENT'.
#
# Rules:
#  1. Start with version information of `0:0:0' for each libtool library.
#
#  2. Update the version information only immediately before a public
#     release of your software.  More frequent updates are unnecessary,
#     and only guarantee that the current interface number gets larger
#     faster.
#
#  3. If the library source code has changed at all since the last
#     update, then increment REVISION (`C:R:A' becomes `C:r+1:A').
#
#  4. If any interfaces have been added, removed, or changed since the
#     last update, increment CURRENT, and set REVISION to 0.
#
#  5. If any interfaces have been added since the last public release,
#     then increment AGE.
#
#  6. If any interfaces have been removed since the last public release,
#     then set AGE to 0.
#
# syntax: CURRENT[:REVISION[:AGE]]
LIBRDF_LIBTOOL_VERSION=0:0:0
AC_SUBST(LIBRDF_LIBTOOL_VERSION)


dnl Checks for programs.
AM_PROG_CC_STDC
AC_ARG_PROGRAM
AM_SANITY_CHECK
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AM_PROG_LIBTOOL

# Find a tar command for 'make dist'
AC_CHECK_PROGS(TAR, gnutar gtar tar)

AC_CHECK_PROGS(JAVA, java jre)
AC_CHECK_PROGS(JAVAC, javac)
AC_DEFINE_UNQUOTED(JAVA_COMMAND, "$JAVA")
AC_CHECK_PROGS(PYTHON, python2.2 python2.1 python2.0 python2 python)
AC_CHECK_PROGS(PERL, perl5.6.1 perl5.6.0 perl5 perl)
AC_CHECK_PROGS(TCL, tcl)
AC_CHECK_PROGS(RUBY, ruby)
AC_CHECK_PROGS(SWIG, swig)

if test "X$PERL" != "X"; then
  tmp=conftest-pl$$
  $PERL -V:installsitearch -V:man3dir > $tmp && . $tmp && rm -f $tmp
  PERLINSTALLSITEARCH=$installsitearch
  PERLMAN3DIR=$man3dir
else
  PERLINSTALLSITEARCH=none
  PERLMAN3DIR=none
fi
AC_SUBST(PERLINSTALLSITEARCH)
AC_SUBST(PERLMAN3DIR)


SWIG_MIN_VERSION=1.3.6

AC_MSG_CHECKING(SWIG support)
if test "X$SWIG" != "X"; then
  SWIG_VERSION=`$SWIG -version 2>&1 |sed -ne 's/^SWIG Version //p'`
  SWIG_VERSION_DEC=`echo $SWIG_VERSION | awk -F. '{printf("%d\n", 10000*$1 + 100*$2 + $3)};'`
  SWIG_MIN_VERSION_DEC=`echo $SWIG_MIN_VERSION | awk -F. '{printf("%d\n", 10000*$1 + 100*$2 + $3)};'`

  if test $SWIG_VERSION_DEC -ge $SWIG_MIN_VERSION_DEC; then
    AC_MSG_RESULT($SWIG_VERSION - OK for Java)
  else
    AC_MSG_RESULT($SWIG_VERSION - no Java support present)
    AC_MSG_WARN(SWIG is present but this version has no Java support)
    AC_MSG_WARN(If you want to change the interface you will need at least)
    AC_MSG_WARN(version $SWIG_MIN_VERSION from http://www.swig.org/)
    AC_MSG_WARN(Alternatively you can use the pre-generated interface files)
  fi
else
  AC_MSG_RESULT(not present - using pre-generated interface files)
fi


AC_CHECK_PROG(LIBWWW_CONFIG, libwww-config, libwww-config)

AM_MISSING_PROG(ACLOCAL, aclocal, $missing_dir)
AM_MISSING_PROG(AUTOCONF, autoconf, $missing_dir)
AM_MISSING_PROG(AUTOMAKE, automake, $missing_dir)
AM_MISSING_PROG(AUTOHEADER, autoheader, $missing_dir)


AM_MAINTAINER_MODE

release_version=no
AC_ARG_ENABLE(release, [  --enable-release        Turn on optimizations.  ], \
 if test "$enableval" = "yes"; then \
	release_version=yes
fi;)	

if test $release_version = no; then 
  CFLAGS=`echo $CFLAGS | sed s/-O2//`
  CXXFLAGS=`echo $CXXFLAGS | sed s/-O2//`
  CPPFLAGS=`echo $CPPFLAGS | sed s/-O2//`
fi



dnl compiler checks
# if using gcc...
if test "$ac_cv_prog_gcc" = yes; then
  STANDARD_CFLAGS=
  MAINTAINER_CFLAGS="-Wall -Wshadow -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls"
else
  STANDARD_CFLAGS=
  MAINTAINER_CFLAGS=
fi



dnl Checks for libraries.
dnl GNU GDBM
AC_CHECK_HEADERS(gdbm.h)
if test "$ac_cv_header_gdbm_h" = yes ; then
  oLIBS="$LIBS"
  AC_CHECK_LIB(gdbm,gdbm_firstkey)
  LIBS="$oLIBS"
fi

dnl Berkeley DB
AC_ARG_WITH(bdb, [  --with-bdb=ROOT            Berkeley DB install area [/usr]], bdb_prefix="$withval", bdb_prefix="/usr") 


AC_MSG_CHECKING(location of BDB)
AC_MSG_RESULT($bdb_prefix)

bdb_available=
if test "$bdb_prefix" != no; then
  oCPPFLAGS="$CPPFLAGS"
  oLDFLAGS="$LDFLAGS"
  oLIBS="$LIBS"
  if test "$bdb_prefix" != /usr; then
    nLDFLAGS="-L$bdb_prefix/lib $LDFLAGS";
    CPPFLAGS="-I$bdb_prefix/include $CPPFLAGS";
    # Yuck, yuck, yuck - can't they create a bdb-config program like GNOME?
    DBname=`cd $bdb_prefix/lib; ls -1 libdb*.a|sed -e 's/^lib//' -e 's/\.a$//' | head -1`
  else
    nLDFLAGS="$LDFLAGS"
    DBname="db"
  fi

  LDFLAGS="$nLDFLAGS"
  AC_CHECK_HEADERS(db.h)
  if test "$ac_cv_header_db_h" = yes ; then
    LDFLAGS="$nLDFLAGS"
    LIBS="$oLIBS -l$DBname"
    have_libdb=no
    AC_MSG_CHECKING(for BDB V3 db_create)
    AC_TRY_LINK([#include <stdio.h>
                 #include <db.h>], [db_create(NULL, NULL, 0);],
		AC_DEFINE(HAVE_DB_CREATE)
                bdb_available="Version 3.x"
                have_libdb=yes
		AC_MSG_RESULT(yes),
		AC_MSG_RESULT(no))

    AC_MSG_CHECKING(for BDB V2 db_open)
    AC_TRY_LINK([#include <stdio.h>
                 #include <db.h>], [db_open(NULL, DB_BTREE, 0, 0, NULL, NULL, NULL);],
		AC_DEFINE(HAVE_DB_OPEN)
                if test $have_libdb = no; then
                  bdb_available="Version 2.x"
                  have_libdb=yes
                fi
		AC_MSG_RESULT(yes),
		AC_MSG_RESULT(no))

    AC_MSG_CHECKING(for BDB V1 dbopen)
    AC_TRY_LINK([#include <stdio.h>
                 #include <db.h>], [dbopen(NULL, 0, 0, DB_BTREE, NULL);],
		AC_DEFINE(HAVE_DBOPEN)
                if test $have_libdb = no; then
                  bdb_available="Version 1.x - not supported"
                  have_libdb=no
                fi
		AC_MSG_RESULT(yes),
		AC_MSG_RESULT(no))

    AC_MSG_CHECKING(whether DB_TXN defined in db.h)
    dnl In BDB, DB_TXN is a pointer to a structure never defined
    AC_TRY_LINK([#include <stdio.h>
                 #include <db.h>], [DB_TXN* ptr=(DB_TXN*)NULL],
		AC_DEFINE(HAVE_BDB_DB_TXN)
		AC_MSG_RESULT(yes),
		AC_MSG_RESULT(no))
    AC_MSG_CHECKING(whether DBC defined in db.h)
    AC_TRY_LINK([#include <db.h>], [size_t len=sizeof(DBC)],
		AC_DEFINE(HAVE_BDB_CURSOR)
		AC_MSG_RESULT(yes),
		AC_MSG_RESULT(no))
    AC_MSG_CHECKING(number of arguments to db_cursor)
    AC_TRY_LINK([#include <stdio.h>
                 #include <db.h>], [DB* db; db->cursor(db, NULL, NULL, 0);],
		AC_DEFINE(HAVE_BDB_CURSOR_4_ARGS)
		AC_MSG_RESULT(4),
		AC_MSG_RESULT(3))
  fi

  if test "$have_libdb" != yes; then
    LIBS="$oLIBS"
    LDFLAGS="$oLDFLAGS"
    CPPFLAGS="$oCPPFLAGS"
   fi

fi

if test "$have_libdb" != yes; then
  AC_MSG_WARN(No persistant storage configured)
  bdb_available=Missing
fi


dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(stdlib.h unistd.h string.h fcntl.h dmalloc.h stdarg.h)
AC_CHECK_HEADERS(expat.h xmlparse.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_BIGENDIAN

AC_CHECK_TYPE(byte, MISSING)
AC_CHECK_TYPE(u32, MISSING)

AC_CHECK_SIZEOF(unsigned char, 1)
AC_CHECK_SIZEOF(unsigned int, 4)
AC_CHECK_SIZEOF(unsigned long, 4)

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_CHECK_FUNCS(mkstemp mktemp tmpnam)

dnl Checks for URI resolvers
AC_ARG_WITH(libwww, [  --with-libwww           Use libwww [yes]], enable_libwww="$withval", enable_libwww="yes") 

have_libwww=
AC_MSG_CHECKING(whether have working libwww)
if test "$enable_libwww" = yes ; then
  if test -n "$LIBWWW_CONFIG"; then
    AC_MSG_RESULT(yes)
    LIBS="$LIBS `$LIBWWW_CONFIG --libs`"
    CFLAGS="$CFLAGS `$LIBWWW_CONFIG --cflags`"
    AC_DEFINE(HAVE_LIBWWW)
    have_libwww=yes
  else
    AC_MSG_RESULT(no)
  fi
else
  AC_MSG_RESULT(no)
fi


dnl Checks for XML parsers
have_expat=0
have_expat_lib=0
have_expat_source=0
need_expat=0
need_expat_source=0
AC_MSG_CHECKING(for expat sources)
if test -d $srcdir/expat; then
  have_expat_source=1
  have_expat=1
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

oLIBS="$LIBS"
AC_CHECK_LIB(xmltok, main, xmlt=1, xmlt=0)

# Raptor only needs XML_ParserCreate but Repat needs
# XML_ParserCreateNS so check for that
AC_CHECK_LIB(xmlparse, XML_ParserCreateNS, xmlp=1, xmlp=0, -lxmltok)

LIBS="$oLIBS"

# Remove any expat lurking around from, say, w3c libwww
LIBS=`echo $LIBS | sed -e 's/-lxmlparse//' -e 's/-lxmltok//'`

AC_CHECK_LIB(expat, XML_ParserCreateNS, libexpat=1, libexpat=0)

LIBS="$oLIBS"

REPAT_FLAGS=

AC_MSG_CHECKING(for working expat in libxmlparse and libxmltok)
if test $xmlp = 1 -a $xmlt = 1 -a  $ac_cv_header_xmlparse_h = yes; then
  LIBS="$LIBS -lxmlparse -lxmltok"
  AC_TRY_RUN([main() {XML_ParserCreateNS(); return(0);}], worked=yes, worked=no, worked=no)
  if test $worked = yes; then
    # Old expat
    have_expat_lib=1
    have_expat=1
    expat_libs="-lxmlparse -lxmltok"

    AC_DEFINE(RDFPARSE_INCLUDE_XMLPARSE)
    REPAT_FLAGS="$REPAT_FLAGS -DRDFPARSE_INCLUDE_XMLPARSE=1"

    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi
else
  AC_MSG_RESULT(no)
fi

LIBS="$oLIBS"

AC_MSG_CHECKING(for working expat in libexpat)
if test $libexpat = 1 -a $ac_cv_header_expat_h = yes ; then
  LIBS="$LIBS -lexpat"
  AC_TRY_RUN([main() {XML_ParserCreateNS(); return(0);}], worked=yes, worked=no, worked=no)
  if test $worked = yes; then
    # New expat - expat-1.95.0 or later
    have_expat_lib=1
    have_expat=1
    expat_libs="-lexpat"

    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi
else
  AC_MSG_RESULT(no)
fi

LIBS="$oLIBS"

AC_CHECK_PROGS(XML_CONFIG, xml2-config xml-config)


have_libxml=0
have_libxml_lib=0
have_libxml_source=0
need_libxml=0
need_libxml_source=0
AC_MSG_CHECKING(for libxml sources)
if test -d $srcdir/libxml -a -r $srcdir/libxml/libxml.spec ; then
  have_libxml_source=1
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

if test "X$XML_CONFIG" != X; then
  oLIBS="$LIBS"
  oCPPFLAGS="$CPPFLAGS"
  LIBS="$LIBS `$XML_CONFIG --libs`"
  AC_CHECK_LIB(xml, xmlParseFile)
  LIBS="$oLIBS"
  AC_MSG_CHECKING(for system (GNOME) libxml library)
  if test $ac_cv_lib_xml_xmlParseFile = yes; then
    have_libxml_lib=1
    have_libxml=1
    AC_MSG_RESULT(yes)


    CPPFLAGS="$CPPFLAGS `$XML_CONFIG --cflags`"

    AC_CHECK_HEADERS(libxml/parser.h libxml/hash.h gnome-xml/parser.h)
    if test "$ac_cv_header_libxml_parser_h" = no -a "$ac_cv_header_gnome_xml_parser_h" = no; then
      AC_MSG_WARN(libxml library found but not headers - disabling)
      have_libxml_lib=0
      have_libxml=0
    fi

    CFLAGS="$oCPPFLAGS"

  else
    AC_MSG_RESULT(no)
  fi
fi


dnl Checks for RDF parsers
parser_modules="repat raptor sirpac-stanford sirpac-w3c libwww"

AC_MSG_CHECKING(RDF parsers required)
AC_ARG_ENABLE(parsers, [  --enable-parsers=LIST   Use RDF parsers [repat raptor sirpac-stanford sirpac-w3c libwww]], parser_modules="$enableval") 
if test "X$parser_modules" = "no" -o "X$parser_modules" = X; then
  parser_modules=
fi
AC_MSG_RESULT($parser_modules)

PARSER_OBJS=
PARSER_SRCS=
JAVA_SIRPACSTANFORD_JAR=
JAVA_SIRPACW3C_JAR=
JAVA_SAX_JAR=
JAVA_SAX_CLASS=
JAVA_CLASSES=


# This is needed because autoheader can't work out which computed
# symbols must be pulled from acconfig.h into config.h.in
if test "x" = "y"; then
  AC_DEFINE(HAVE_RAPTOR_RDF_PARSER)
  AC_DEFINE(HAVE_REPAT_RDF_PARSER)
  AC_DEFINE(HAVE_SIRPAC_RDF_PARSER)
  AC_DEFINE(HAVE_LIBWWW_RDF_PARSER)
fi


AC_ARG_WITH(java-sirpac-stanford-jar, [  --with-java-sirpac-stanford-jar=JAR Use the SiRPAC (Stanford version) jar file [no]], java_sirpac_stanford_jar="$withval", java_sirpac_stanford_jar="no") 

AC_ARG_WITH(java-sirpac-w3c-jar, [  --with-java-sirpac-w3c-jar=JAR Use the SiRPAC (W3C version) jar file [no]], java_sirpac_w3c_jar="$withval", java_sirpac_w3c_jar="no") 

AC_ARG_WITH(java-sax-jar, [  --with-java-sax-jar=JAR Use the Java SAX implementation in the given jar file [no]], java_sax_jar="$withval", java_sax_jar="no") 
AC_ARG_WITH(java-sax-class, [  --with-java-sax-class=CLASS  Give the Java SAX class name for the SAX jar file [no]], java_sax_class="$withval", java_sax_class="no") 

have_sirpac=0

have_sirpac_stanford=0
AC_MSG_CHECKING(whether using Java SiRPAC - Stanford version)
if test "$java_sirpac_stanford_jar" != no ; then
  AC_DEFINE_UNQUOTED(JAVA_SIRPACSTANFORD_JAR, "$java_sirpac_stanford_jar")
  if test -r $java_sirpac_stanford_jar; then
    AC_MSG_RESULT(yes)
    if test "X$java_sax_class" = no ; then
      # was: com.microstar.xml.SAXDriver
      java_sax_class=org.brownell.xml.aelfred2.SAXDriver
    fi
    have_sirpac_stanford=1
    have_sirpac=1
  else
    AC_MSG_RESULT(no - JAR file $java_sirpac_stanford_jar does not exist)
  fi
else
  AC_MSG_RESULT(no)
fi


have_sirpac_w3c=0
AC_MSG_CHECKING(whether using Java SiRPAC - W3C version)
if test "$java_sirpac_w3c_jar" != no ; then
  AC_DEFINE_UNQUOTED(JAVA_SIRPACW3C_JAR, "$java_sirpac_w3c_jar")
  if test -r $java_sirpac_w3c_jar; then
    AC_MSG_RESULT(yes)
    have_sirpac_w3c=1
    have_sirpac=1
  else
    AC_MSG_RESULT(no - JAR file $java_sirpac_w3c_jar does not exist)
  fi
else
  AC_MSG_RESULT(no)
fi



have_sax=0
AC_MSG_CHECKING(whether using Java SAX)
if test "$java_sax_jar" != no ; then
  AC_DEFINE_UNQUOTED(JAVA_SAX_JAR, "$java_sax_jar")
  if test -r $java_sax_jar; then
    if test "$java_sax_class" != no ; then
      AC_MSG_RESULT(yes)
      JAVA_SAX_JAR=$java_sax_jar
      JAVA_SAX_CLASS=$java_sax_class
      have_sax=1
    else
      AC_MSG_RESULT(no - SAX class must given with --with-java-sax-class)
    fi
  else
    AC_MSG_RESULT(no - JAR file $java_sax_jar does not exist)
  fi
else
  AC_MSG_RESULT(no)
fi
AC_DEFINE_UNQUOTED(JAVA_SAX_JAR, "$java_sax_jar")
AC_DEFINE_UNQUOTED(JAVA_SAX_CLASS, "$java_sax_class")


have_raptor=0
if test -r $srcdir/raptor.h -a -r $srcdir/raptor_parse.c -a -r $srcdir/ntriples.h -a -r $srcdir/ntriples_parse.c ; then
  have_raptor=1;
  RAPTOR_INCS="raptor.h ntriples.h"
  AC_SUBST(RAPTOR_INCS)
  RAPTOR_SRCS="raptor_parse.c ntriples_parse.c"
  AC_SUBST(RAPTOR_SRCS)
fi

# Always have it
have_repat=1


seen_sirpac=0
need_repat=0
need_raptor=0
rdf_parsers_available=
for parser in $parser_modules; do
  uname=`echo $parser | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`
  found=0
  original_parser=$parser

  case $parser in
    sirpac-stanford)
      if test $have_sirpac_stanford = 1 ; then
	found=1
        parser=sirpac
      fi
    ;;

    sirpac-w3c)
      if test $have_sirpac_w3c = 1 ; then
        if test $have_sax = 1 ; then
  	  found=1
          parser=sirpac
        else
          AC_MSG_WARN(Cannot use SiRPAC W3C version - no SAX jar and class given)
        fi
      fi
    ;;
  
    libwww)
      AC_MSG_CHECKING(whether libwww has RDF support)
      if test "$have_libwww" = yes ; then
	AC_TRY_LINK([#undef PACKAGE
		     #undef VERSION
		     #include <WWWXML.h>], [HTRDF* rdfp=HTRDF_new();],
		    AC_DEFINE(HAVE_LIBWWW_RDF)
                    found=1
		    AC_MSG_RESULT(yes),
		    AC_MSG_RESULT(no))
      else
	AC_MSG_RESULT(no)
      fi
    ;;

    raptor)
      if test $have_raptor = 1 ; then
	if test $have_libxml_lib = 1; then
	  need_libxml=1
	  found=1
	  AC_DEFINE(NEED_LIBXML)
	  AC_DEFINE(RAPTOR_XML_LIBXML)
	elif test $have_libxml_source = 1; then
	  need_libxml=1
	  need_libxml_source=1
	  found=1
	  AC_DEFINE(NEED_LIBXML)
	  AC_DEFINE(RAPTOR_XML_LIBXML)
	elif test $have_expat_lib = 1; then
	  need_expat=1
	  found=1
	  AC_DEFINE(NEED_EXPAT)
	  AC_DEFINE(RAPTOR_XML_EXPAT)
	elif test $have_expat_source = 1; then
	  need_expat=1
	  need_expat_source=1
	  found=1
	  AC_DEFINE(NEED_EXPAT)
	  AC_DEFINE(RAPTOR_XML_EXPAT)
       	fi
       	need_raptor=1
      fi
        
      ;;
    repat)
      if test $have_repat = 1 ; then
	if test $have_expat_lib = 1; then
	  need_expat=1
	  found=1
	  AC_DEFINE(NEED_EXPAT)
	elif test $have_expat_source = 1; then
	  need_expat=1
	  need_expat_source=1
	  found=1
	  AC_DEFINE(NEED_EXPAT)
	fi
	need_repat=1
      fi
      ;;
    *)
      AC_MSG_ERROR(No such parser $parser)
  esac

  if test $found = 1; then
    rdf_parsers_available="$rdf_parsers_available $original_parser"
  fi

  # Only add sirpac parser module once even if many sirpac-* parsers are used
  if test $parser = sirpac; then
    uname=`echo $parser | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`
    if test $seen_sirpac = 1; then
      found=0
    else
      seen_sirpac=1
      JAVA_CLASSES="$JAVA_CLASSES PrintConsumer.class PrintParser.class"
    fi
  fi

  # Add objects, sources only if the parser was found
  if test $found = 1; then
    PARSER_OBJS="$PARSER_OBJS rdf_parser_$parser.lo"
    PARSER_SRCS="$PARSER_SRCS rdf_parser_$parser.c"

    if test $parser = raptor; then
      PARSER_OBJS="$PARSER_OBJS raptor_parse.lo ntriples_parse.lo"
      PARSER_SRCS="$PARSER_SRCS raptor_parse.c ntriples_parse.c"
    fi

    n=HAVE_${uname}_RDF_PARSER
    AC_DEFINE_UNQUOTED($n)
  fi
done



dnl Checks for languages
AC_SUBST(JAVA_CLASSES)
AC_DEFINE_UNQUOTED(JAVA_CLASS_DIR, "$prefix/share/$PACKAGE")

if test "X$PYTHON" != X; then

  dnl need to change quotes to allow square brackets
  changequote(<<, >>)dnl
  python_version=`$PYTHON -c 'import sys; print sys.version[:3]'`
  python_prefix=`$PYTHON -c 'import sys; print sys.prefix'`
  changequote([, ])dnl

  # What a crock
  PYTHON_INCLUDES="-I$python_prefix/include/python$python_version"
  AC_SUBST(PYTHON_INCLUDES)
else
  # This allows 'make clean' in the python directory to work when
  # python isn't available
  PYTHON=:
fi

if test "X$RUBY" != X; then

  dnl need to change quotes to allow square brackets
  changequote(<<, >>)dnl
  ruby_prefix=`$RUBY -rrbconfig -e "print Config::CONFIG['archdir']"`
  changequote([, ])dnl

  RUBY_INCLUDES="-I$ruby_prefix"
  AC_SUBST(RUBY_INCLUDES)
else
  # This allows 'make clean' in the python directory to work when
  # python isn't available
  RUBY=:
fi

AC_SUBST(PARSER_OBJS)
AC_SUBST(PARSER_SRCS)

if test "X$PARSER_OBJS" = X; then
  AC_MSG_WARN(No RDF parser configured)
fi



xml_parsers_available=
if test $need_libxml = 1; then
  if test $need_libxml_source = 1; then
    xml_parsers_available="$xml_parsers_available libxml(source)"
  else
    xml_parsers_available="$xml_parsers_available libxml(system)"
  fi
fi
if test $need_expat = 1; then
  if test $need_expat_source = 1; then
    xml_parsers_available="$xml_parsers_available expat(source)"
  else
    if test $libexpat = 1; then
      xml_parsers_available="$xml_parsers_available expat(system libexpat)"
    else
      xml_parsers_available="$xml_parsers_available expat(system libxmlparse,libxmltok)"
    fi
  fi
fi



dnl Checks for modules
digest_modules="md5 sha1 ripemd160"

AC_MSG_CHECKING(digests wanted)
AC_ARG_ENABLE(digests, [  --enable-digests=LIST   Use digests [md5 sha1 ripemd160]], digest_modules="$enableval") 
AC_MSG_RESULT($digest_modules)

DIGEST_OBJS=
DIGEST_SRCS=

AC_ARG_WITH(openssl-digests, [  --with-openssl-digests  Use openssl digests [yes]], enable_openssl_digests="$withval", enable_openssl_digests="yes") 

# This is needed because autoheader can't work out which computed
# symbols must be pulled from acconfig.h into config.h.in
if test "x" = "y"; then
  AC_DEFINE(HAVE_OPENSSL_CRYPTO_MD5_DIGEST)
  AC_DEFINE(HAVE_OPENSSL_CRYPTO_SHA1_DIGEST)
  AC_DEFINE(HAVE_OPENSSL_CRYPTO_RIPEMD160_DIGEST)
fi

digest_modules_available=
AC_MSG_CHECKING(whether to use openssl digests)
if test "$enable_openssl_digests" = yes ; then
  AC_MSG_RESULT(yes)
  AC_CHECK_HEADERS(openssl/crypto.h)
  if test "$ac_cv_header_openssl_crypto_h" = yes ; then
    AC_DEFINE(HAVE_OPENSSL_DIGESTS)
    new_digest_modules=
    oLIBS="$LIBS"
    LIBS="-lcrypto $LIBS"
    have_libcrypto=no

    for module in $digest_modules; do
      func=`echo $module | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`
      found=
      AC_MSG_CHECKING(for openssl $func digest module)
      AC_CACHE_VAL(ac_cv_lib_crypto_$func,
                   [AC_TRY_LINK(, $func(),
                   [eval "ac_cv_lib_crypto_$func=yes"],
                   [eval "ac_cv_lib_crypto_$func=no"])])
      if eval "test \"`echo '$ac_cv_lib_crypto_'$func`\" = yes"; then
	AC_MSG_RESULT(yes)
	n=HAVE_OPENSSL_CRYPTO_${func}_DIGEST
	AC_DEFINE_UNQUOTED($n)
        have_libcrypto=yes
        digest_modules_available="$digest_modules_available $module(openssl)"
      else
	AC_MSG_RESULT(no)
	new_digest_modules="${new_digest_modules} $module"
      fi
    done
    if test "$have_libcrypto" = no; then
      LIBS="$oLIBS"
    fi
    DIGEST_OBJS="$DIGEST_OBJS rdf_digest_openssl.lo"
    DIGEST_SRCS="$DIGEST_SRCS rdf_digest_openssl.c"
    digest_modules=$new_digest_modules
  fi
else
  AC_MSG_RESULT(no)
fi


# This is needed because autoheader can't work out which computed
# symbols must be pulled from acconfig.h into config.h.in
if test "x" = "y"; then
  AC_DEFINE(HAVE_LOCAL_MD5_DIGEST)
  AC_DEFINE(HAVE_LOCAL_SHA1_DIGEST)
  AC_DEFINE(HAVE_LOCAL_RIPEMD160_DIGEST)
fi

# Maybe add some local digest modules
for module in $digest_modules; do
  module_u=`echo $module | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`
  AC_MSG_CHECKING(for local $module digest module)
  base=rdf_digest_$module
  if test -r $srcdir/$base.c; then
    AC_MSG_RESULT(yes);

    n=HAVE_LOCAL_${module_u}_DIGEST
    AC_DEFINE_UNQUOTED($n)

    DIGEST_OBJS="$DIGEST_OBJS $base.lo"
    DIGEST_SRCS="$DIGEST_SRCS $base.c"
   digest_modules_available="$digest_modules_available $module"
  else
    AC_MSG_RESULT(no);
  fi
done

AC_SUBST(DIGEST_OBJS)
AC_SUBST(DIGEST_SRCS)


HASH_OBJS=
HASH_SRCS=

# GDBM is not available anymore because it cannot handle duplicate
# keys, without extra support. Dave -- 2000-08-11
#
#AC_MSG_CHECKING(for libgdbm support)
#if test "$ac_cv_lib_gdbm_gdbm_firstkey" = yes ; then
#  AC_MSG_RESULT(yes);
#  AC_DEFINE(HAVE_GDBM_HASH)
#  HASH_OBJS="$HASH_OBJS rdf_hash_gdbm.lo"
#  HASH_SRCS="$HASH_SRCS rdf_hash_gdbm.c"
#else
#  AC_MSG_RESULT(no);
#fi

AC_MSG_CHECKING(for bdb hash support)
if test "$have_libdb" = yes; then
  AC_MSG_RESULT(yes);
  AC_DEFINE(HAVE_BDB_HASH)
  HASH_OBJS="$HASH_OBJS rdf_hash_bdb.lo"
  HASH_SRCS="$HASH_SRCS rdf_hash_bdb.c"
else
  AC_MSG_RESULT(no);
fi


AC_SUBST(HASH_OBJS)
AC_SUBST(HASH_SRCS)


dnl Checks for building sub-packages in sub directories
SD="docs perl python tcl java"


XML_OBJS=

if test $have_libxml = 1 -a $need_libxml = 1; then
  if test $need_libxml_source = 1; then
    SD="$SD libxml"
    (cd libxml && ./configure --cache=../config.cache --enable-shared=no)
    CFLAGS="$CFLAGS -I$srcdir/libxml"
    XML_OBS="libxml/libxml.a"
  else
    LIBS="`$XML_CONFIG --libs` $LIBS"
    CFLAGS="$CFLAGS `$XML_CONFIG --cflags`"
  fi
fi

if test $need_expat = 1; then
  # Only build local copy if it is needed
  if test $need_expat_source = 1; then
    SD="$SD expat"
    CFLAGS="-I\$(top_srcdir)/expat/xmlparse $CFLAGS"
    XML_OBJS="\$(top_builddir)/expat/xmlparse/xmlparse.lo \$(top_builddir)/expat/xmlparse/hashtable.lo \$(top_builddir)/expat/xmltok/xmlrole.lo \$(top_builddir)/expat/xmltok/xmltok.lo"
    REPAT_FLAGS="$REPAT_FLAGS -I\$(top_srcdir)/expat/xmlparse"

    AC_DEFINE(NEED_EXPAT_SOURCE)
    # FIXME - when expat in source tree is updated to new (sourceforge)
    # version then need to remove these two lines:
    AC_DEFINE(RDFPARSE_INCLUDE_XMLPARSE)
    REPAT_FLAGS="$REPAT_FLAGS -DRDFPARSE_INCLUDE_XMLPARSE=1"

    # We know local expat sources has XML_SetNamespaceDeclHandler already
    found=yes
  else
    LIBS="$expat_libs $LIBS"
    found=no
  fi

  AC_MSG_CHECKING(for XML_SetNamespaceDeclHandler in expat)
  if test $found = yes; then
    worked=yes
  else
    AC_TRY_RUN([main() {XML_SetNamespaceDeclHandler(); return(0);}], worked=yes, worked=no, worked=no)
  fi

  if test $worked = yes; then
    AC_DEFINE(HAVE_XML_SetNamespaceDeclHandler)
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi

fi

if test $need_repat = 1; then
  # Always have local copy
  SD="$SD repat"
  XML_OBJS="$XML_OBJS \$(top_builddir)/repat/rdfparse.lo"
fi

AC_SUBST(REPAT_FLAGS)
AC_SUBST(XML_OBJS)
AC_SUBST(SD)


# Make final changes to cflags
CFLAGS="-DLIBRDF_INTERNAL=1 $CFLAGS"
MEM=
MEM_LIBS=
if test "$USE_MAINTAINER_MODE" = yes; then
  #MEM=-DLIBRDF_MEMORY_DEBUG_DMALLOC=1
  #MEM_LIBS=-ldmalloc
  MEM=-DLIBRDF_MEMORY_DEBUG=1
  MEM_LIBS=
  CFLAGS="-DLIBRDF_DEBUG=1 $CFLAGS"
fi
STANDARD_CFLAGS="$STANDARD_CFLAGS $CFLAGS"
if test "$USE_MAINTAINER_MODE" = yes; then
  CFLAGS="$MAINTAINER_CFLAGS $CFLAGS"
fi
AC_SUBST(MEM)
AC_SUBST(MEM_LIBS)
AC_SUBST(STANDARD_CFLAGS)


AC_OUTPUT(Makefile
docs/Makefile
expat/Makefile
expat/xmlparse/Makefile
expat/xmltok/Makefile
perl/Makefile
perl/lib/Makefile
perl/lib/RDF/Makefile
perl/lib/RDF/Redland/Makefile
python/Makefile
python/test/Makefile
tcl/Makefile
java/Makefile
java/org/Makefile
java/org/librdf/Makefile
java/org/librdf/redland/Makefile
ruby/Makefile
repat/Makefile
debian/Makefile
debian/rules
redland.spec
redland-config,
[chmod +x redland-config debian/rules])

AC_MSG_RESULT([
Redland build summary:
  XML parsers:           $xml_parsers_available
  RDF parsers:           $rdf_parsers_available
  Hash digests:          $digest_modules_available
  Berkeley/Sleepycat DB:  $bdb_available
])
