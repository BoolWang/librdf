<!-- ##### SECTION Title ##### -->
iterator

<!-- ##### SECTION Short_Description ##### -->
Iterator over nodes/objects

<!-- ##### SECTION Long_Description ##### -->
<para>
This class provides a pull-iterator API for reading a sequence of
objects generated from some method.  The sequence is primarily
for sequences of #librdf_node objects returned from some model
method but is used internally for other purposes.
</para>

<para>Iterators are not cursors; the original object that generated
the iteration should not be modified while the iteration is in
progress and the returned object should be copied with the
class copy constructor if needed to persist after the iteration
is exhausted.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### TYPEDEF librdf_iterator ##### -->
<para>

</para>


<!-- ##### USER_FUNCTION librdf_iterator_map_handler ##### -->
<para>

</para>

@iterator: 
@map_context: 
@item: 
@Returns: 


<!-- ##### USER_FUNCTION librdf_iterator_map_free_context_handler ##### -->
<para>

</para>

@map_context: 


<!-- ##### FUNCTION librdf_new_iterator ##### -->
<para>

</para>

@world: 
@context: 
@is_end_method: 
@next_method: 
@get_method: 
@finished_method: 
@Returns: 


<!-- ##### FUNCTION librdf_free_iterator ##### -->
<para>

</para>

@iterator: 


<!-- ##### FUNCTION librdf_iterator_end ##### -->
<para>

</para>

@iterator: 
@Returns: 


<!-- ##### FUNCTION librdf_iterator_have_elements ##### -->
<para>

</para>

@iterator: 
@Returns: 


<!-- ##### FUNCTION librdf_iterator_finished ##### -->
<para>

</para>

@iterator: 
@Returns: 


<!-- ##### FUNCTION librdf_iterator_next ##### -->
<para>

</para>

@iterator: 
@Returns: 


<!-- ##### FUNCTION librdf_iterator_get_object ##### -->
<para>

</para>

@iterator: 
@Returns: 


<!-- ##### FUNCTION librdf_iterator_get_context ##### -->
<para>

</para>

@iterator: 
@Returns: 


<!-- ##### FUNCTION librdf_iterator_get_key ##### -->
<para>

</para>

@iterator: 
@Returns: 


<!-- ##### FUNCTION librdf_iterator_get_value ##### -->
<para>

</para>

@iterator: 
@Returns: 


<!-- ##### FUNCTION librdf_iterator_add_map ##### -->
<para>

</para>

@iterator: 
@map_function: 
@free_context: 
@map_context: 
@Returns: 


<!-- ##### FUNCTION librdf_new_empty_iterator ##### -->
<para>

</para>

@world: 
@Returns: 


