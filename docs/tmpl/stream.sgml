<!-- ##### SECTION Title ##### -->
stream

<!-- ##### SECTION Short_Description ##### -->
Iterator over triples/statements

<!-- ##### SECTION Long_Description ##### -->
<para>
This class provides a pull-iterator API for reading a sequence of
#librdf_statement (triples) generated from some method.  This is
a way to return a serialized #librdf_model in a generated form
and is in most instances, generated lazily when the next statement
is needed.
</para>

<para>Streams are not cursors; the original object that generated the
stream should not be modified while the streaming is in progress
and the returned #librdf_statement should be copied with the class
copy constructor librdf_new_statement_from_statement() if needed to
persist after the stream is exhausted.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### TYPEDEF librdf_stream ##### -->
<para>

</para>


<!-- ##### USER_FUNCTION librdf_stream_map_handler ##### -->
<para>

</para>

@stream: 
@map_context: 
@item: 
@Returns: 


<!-- ##### USER_FUNCTION librdf_stream_map_free_context_handler ##### -->
<para>

</para>

@map_context: 


<!-- ##### FUNCTION librdf_new_stream ##### -->
<para>

</para>

@world: 
@context: 
@is_end_method: 
@next_method: 
@get_method: 
@finished_method: 
@Returns: 


<!-- ##### FUNCTION librdf_new_stream_from_node_iterator ##### -->
<para>

</para>

@iterator: 
@statement: 
@field: 
@Returns: 


<!-- ##### FUNCTION librdf_new_empty_stream ##### -->
<para>

</para>

@world: 
@Returns: 


<!-- ##### FUNCTION librdf_free_stream ##### -->
<para>

</para>

@stream: 


<!-- ##### FUNCTION librdf_stream_end ##### -->
<para>

</para>

@stream: 
@Returns: 


<!-- ##### FUNCTION librdf_stream_next ##### -->
<para>

</para>

@stream: 
@Returns: 


<!-- ##### FUNCTION librdf_stream_get_object ##### -->
<para>

</para>

@stream: 
@Returns: 


<!-- ##### FUNCTION librdf_stream_get_context ##### -->
<para>

</para>

@stream: 
@Returns: 


<!-- ##### FUNCTION librdf_stream_add_map ##### -->
<para>

</para>

@stream: 
@map_function: 
@free_context: 
@map_context: 
@Returns: 


<!-- ##### FUNCTION librdf_stream_print ##### -->
<para>

</para>

@stream: 
@fh: 


