2010-09-24  Dave Beckett <dave@dajobe.org>

	* Redland.i:
	Export more functions to SWIG

	Export:
	librdf_parser_check_name - for checking parser names
	librdf_query_results_is_syntax - to check if query result is a syntax
	librdf_serializer_check_name - for checking serializer names
	librdf_serializer_serialize_stream_to_file - pair of ...model_to_file

	* src/rdf_node.c:
	(librdf_new_node_from_uri_string): Cast for strlen arg

	* src/rdf_raptor.h: Export librdf_world_set_raptor and
	librdf_world_get_raptor for all raptors

	* src/rdf_raptor.c: librdf_world_set_raptor and
	librdf_world_get_raptor are public for all
	raptors

	(librdf_world_set_raptor): Export for V1 and
	V2.

	(librdf_world_get_raptor): Export for V1 and
	V2.

	(librdf_init_raptor): For V2 init, error and return but do not
	abort on raptor world failure.

	* src/rdf_init_internal.h: raptor_world_ptr and
	raptor_world_allocated_here are always in struct.

	* configure.ac: Use AC_LANG_SOURCE for gcc flag test

	* examples/example8.c: Long int for size_t print

	* examples/Makefile.am, examples/example8.c: Add example8 which
	formats sparql queries into triples or variable bindings

2010-09-10  Dave Beckett <dave@dajobe.org>

	* src/rdf_query_rasqal.c:
	Fix runtime warning for models with no
	contexts (rasqal_redland_new_triples_source): use
	librdf_model_supports_contexts() to only add graph names to models
	that have contexts (graph names) to prevent a runtime warning.

	* docs/redland-sections.txt, src/rdf_model.c, src/rdf_model.h:
	Export librdf_model_supports_contexts to public API

2010-08-30  Dave Beckett <dave@dajobe.org>

	* utils/rdfproc.c:
	Tidy help information - correct defaults

	* docs/tmpl/hash.sgml, docs/tmpl/iterator.sgml,
	docs/tmpl/list.sgml, docs/tmpl/parser.sgml, docs/tmpl/query.sgml,
	docs/tmpl/redland-unused.sgml, docs/tmpl/serializer.sgml,
	docs/tmpl/storage.sgml, docs/tmpl/stream.sgml, docs/tmpl/world.sgml:
	
	Updated generated SGML templates

	* src/rdf_raptor_statement.c: Refactor to remove warning of call
	to deprecated
	librdf_statement_encode_parts

	(librdf_statement_encode_parts_internal): Added

	(librdf_statement_encode_parts, librdf_statement_encode_parts2):
	Call
	librdf_statement_encode_parts_internal

	(librdf_statement_decode): Add fatal error if this function is
	called, librdf with Raptor V2 cannot implement it.

2010-08-30  Lauri Aalto <laalto@iki.fi>

	* src/rdf_hash.c:
	(librdf_hash_to_string): Avoid using uninitialized pointers when
	jumping to tidy block prematurely.

2010-08-29  Dave Beckett <dave@dajobe.org>

	* LICENSE.html: or any newer versions.  Link to specific LGPL 2.1
	version doc.  Wording and formatting

	* FAQS.html: More FAQS

	* FAQS.html, INSTALL.html, LICENSE.html, NEWS.html, README.html,
	RELEASE.html, TODO.html, configure.ac, redland.rdf.in: Use
	'Redland librdf RDF API Library' as the title

	* Redland.i:
	Expose new functions that make sense to bindings API

	Of the new functions in the 1.0.11 API, excluding all the ones
	that rely on counted strings that make little sense for a
	scripting API via SWIG, those that deal with
	raptor_iostream (*_write) that leaves:

	librdf_hash_from_string - OOPS, already was in API even though it
	was internal!
	librdf_hash_to_string - added
	librdf_new_query_results_formatter2 - not added, formatter is not
	in SWIG
	librdf_node_new_static_node_iterator - not added, C level
	librdf_query_languages_enumerate - not added, enumeration returns
	by sideffects
	librdf_query_results_to_file2 - added
	librdf_query_results_to_file_handle2 - not added passing FH hard
	in bindings.
	librdf_query_results_to_string2 - added
	librdf_statement_decode2 - not added, memory-focused
	librdf_statement_encode2 - not added, memory-focused
	librdf_statement_encode_parts2 - not added, memory-focused

	* src/rdf_statement_common.c:
	(librdf_statement_encode_parts2): autodocs

	* src/rdf_statement.c:
	(librdf_statement_decode_parts): Restored using
	librdf_statement_decode2

	* src/rdf_statement.c:
	(main): Use non-deprecated librdf_statement_encode2() in test.

	* utils/rdfproc.1: Update for -q, -V, -o help, -r help and -s help

	* utils/rdfproc.c: Add -s help support

	* utils/rdfproc.c:
	Send non-result information messages to stderr
	and add quiet -q and verbose -V options to suppress/activate them.

	Added -q and -V options to rdfproc(1) based on patch in
	http://bugs.librdf.org/mantis/view.php?id=334

	Added verbosity variable set initially to 1, -q makes it 0, -V
	increases it.

	Add support for '-o help' to print list of serializers.

	Print all serializers in help message below -o description.

	Note that the 'simple' serializer is now N-Triples.

	Set rc for parse command to 0 only if there are no errors.

	Some code style fixes.

	Fixes Issue#0000334 http://bugs.librdf.org/mantis/view.php?id=334

	* src/rdf_hash.c: Added checks for memory allocation errors to
	(librdf_hash_print, librdf_hash_print_keys, librdf_hash_to_string)

2010-08-27  Dave Beckett <dave@dajobe.org>

	* docs/redland-sections.txt, docs/tmpl/hash.sgml,
	docs/tmpl/iterator.sgml, docs/tmpl/list.sgml,
	docs/tmpl/parser.sgml, docs/tmpl/query.sgml,
	docs/tmpl/redland-unused.sgml, docs/tmpl/serializer.sgml,
	docs/tmpl/storage.sgml, docs/tmpl/stream.sgml: # Update tmpls

	* HACKING.md: No space before brace

2010-08-27  Nicholas J Humfrey <njh@aelius.com>

	* src/rdf_hash.c: Added new librdf_hash_to_string() function for
	converting a librdf_hash back to a string.

2010-08-26  Dave Beckett <dave@dajobe.org>

	* src/rdf_storage_sql.c:
	(librdf_new_sql_config): Turn debug print into log action at level
	debug.

	* src/rdf_query_rasqal.c: Make rasqal query debugging display only
	if LIBRDF_DEBUG > 1

	* src/rdf_storage_sqlite.c: Make even less sqlite request debug
	noise.

	* src/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_exec): Make less debug noise.

	* utils/rdfproc.c: Fail with error when giving -n to a read only
	operation

	Adjust HELP_ARG macro to print alternatives when have long getopt
	support.

	(main): Generate error if not writable and is_new is set.

	Fixes Issue#0000383 http://bugs.librdf.org/mantis/view.php?id=383

	* HACKING.md: # Add emacs mode at end

	* HACKING.md: #words

2010-08-25  Dave Beckett <dave@dajobe.org>

	* Makefile.am: Add HACKING.md conversion dependent on script

	* docs/markdown-to-html.pl: Fix <pre><code> markdown indenting

	* docs/markdown-to-html.pl: Simplify converter - just add
	header/footer, do not run tidy

	* HACKING.md: Put headers down 1 level

	* Makefile.am: Use docs/markdown-to-html.pl to convert HACKING.md

	* docs/Makefile.am, docs/markdown-to-html.pl: Add
	markdown-to-html.pl

2010-08-24  Dave Beckett <dave@dajobe.org>

	* HACKING.md: #more words

	* HACKING.md: #more words

	* HACKING.md: words

	* .gitignore, HACKING.md, HACKING.txt, Makefile.am: Make
	HACKING.html from HACKING.md

	* HACKING.html, HACKING.txt: Markdown HACKING

	* HACKING.html: Now in better markdown format

	* HACKING.txt: typo

	* HACKING.txt: HACKING

	* src/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_open): Fix unlink (is new) logic

	* docs/tmpl/iterator.sgml, docs/tmpl/list.sgml,
	docs/tmpl/parser.sgml, docs/tmpl/query.sgml,
	docs/tmpl/serializer.sgml, docs/tmpl/storage.sgml,
	docs/tmpl/stream.sgml: Update templates

2010-08-23  Dave Beckett <dave@dajobe.org>

	* src/rdf_raptor_statement.c:
	(librdf_statement_encode2): Use librdf_statement_encode_parts2
	instead of deprecated librdf_statement_encode_parts.

	* src/rdf_query_rasqal.c:
	(rasqal_redland_new_triples_source): Make graph iteration fix work
	with raptor v1 too

2010-08-23  Lauri Aalto <laalto@iki.fi>

	* src/rdf_hash_internal.h:
	removed duplicate declaration of
	librdf_hash_from_string()

2010-08-23  Nicholas J Humfrey <njh@aelius.com>

	* src/rdf_hash.c: (librdf_hash_print, librdf_hash_print_keys,
	librdf_hash_print_values): Fixed wrong order of arguments used to
	fwrite()

2010-08-22  Dave Beckett <dave@dajobe.org>

	* docs/Makefile.am, docs/redland-sections.txt,
	docs/tmpl/hash.sgml, docs/tmpl/iterator.sgml, docs/tmpl/list.sgml,
	docs/tmpl/node.sgml, docs/tmpl/parser.sgml, docs/tmpl/query.sgml,
	docs/tmpl/query_results.sgml, docs/tmpl/redland-unused.sgml,
	docs/tmpl/serializer.sgml, docs/tmpl/statement.sgml,
	docs/tmpl/storage.sgml, docs/tmpl/stream.sgml,
	docs/tmpl/unused.sgml, docs/tmpl/uri.sgml, src/rdf_hash.h,
	src/rdf_init.c, src/rdf_model.c, src/rdf_node.c, src/rdf_query.h,
	src/rdf_query_results.c, src/rdf_statement.c, src/rdf_statement.h,
	src/rdf_storage_module.h: Updated code for gtk-doc autodocs

2010-08-20  Dave Beckett <dave@dajobe.org>

	* src/rdf_query_rasqal.c: Try to construct a set of data graphs
	that make rasqal queries with graphs work.

	(rasqal_redland_new_triples_source): After deleteing any existing
	graphs in the query string, add all the graph context uris as data
	graphs into the query model.  This allows rasqal to iterate over
	them and bind variables to graph names correctly.  This is a
	workaround, as really rasqal + redland should work together to
	allow abstracting this out of the triples-focused API.  Intended
	to address Issue#000382
	http://bugs.librdf.org/mantis/view.php?id=382

2010-08-09  Dave Beckett <dave@dajobe.org>

	* configure.ac:
	SUBST HAVE_RAPTOR2_API with define and conditional

	* redland.pc.in:
	Set have_raptor2_api var

	* configure.ac:
	AC_SUBST(HAVE_RAPTOR2_API)

	* configure.ac: Check if rasqal was built with raptor2 API and
	force raptor2 if it was.  This prevents trying to build librdf
	with raptor1 if rasqal was built with raptor2.

	* src/rdf_init.c: Keep the minimal rdf_init.c
	librdf_new_world()..librdf_free_world() test minimal by not using
	the librdf_world object for anything.  Create a separate rdf_world
	object for other tests.

2010-08-06  Nicholas J Humfrey <njh@aelius.com>

	* src/rdf_node.c: Added test for librdf_new_node()

	* src/rdf_parser_raptor.c: Update
	librdf_parser_raptor_generate_id_handler() to handle new raptor
	generate nodeid API

2010-08-03  Dave Beckett <dave@dajobe.org>

	* src/rdf_node.c:
	(librdf_new_node_from_counted_uri_string): Define correctly

	* src/rdf_query.c:
	(main): use hash-type memory if BDB hash is not present.

	* src/rdf_model.c:
	(main): use hash-type memory if BDB hash is not present.

	* src/rdf_storage.c:
	(main): use hash-type memory if BDB hash is not present.

	* src/rdf_model.c:
	(main): Only try BDB hash if it's present.

	* configure.ac:
	move have_libdb=no earlier

2010-08-02  Dave Beckett <dave@dajobe.org>

	* src/rdf_node.c, src/rdf_node.h: Added
	librdf_new_node_from_counted_uri_string() to build URI node

	(librdf_new_node_from_counted_uri_string): Added

	(librdf_new_node_from_uri_string_or_uri): Adjust to add len
	parameter needed when passing in string.

	(librdf_new_node_from_uri_string): Pass in strlen(uri_string).

	* src/rdf_uri.c, src/rdf_uri.h: Added librdf_new_uri2() for
	building URIs from a counted string.

	(librdf_new_uri2): Added, using
	raptor_new_uri_from_counted_string() when built with raptor2.
	Clarify returns NULL if length is 0 too.

	(librdf_new_uri): Wrapper to above, calling strlen.

	* src/Makefile.am: adjust sqlite CPPFLAGS to ensure general
	includes are first.

2010-08-01  Dave Beckett <dave@dajobe.org>

	* src/rdf_term.c:
	(librdf_node_encode): For URI, ensure NUL is written at end

	* src/rdf_stream.c:
	(librdf_stream_write): Add space before context url

2010-06-04  Lauri Aalto <laalto@iki.fi>

	* src/Makefile.am, src/rdf_raptor_statement.c,
	src/rdf_statement.c, src/rdf_statement_common.c:
	
	(librdf_statement_encode_parts2, librdf_init_statement,
	librdf_finish_statement): Pulled some functionality common to both
	librdf and raptor2 statements to rdf_statement_common.c. Now links
	with LIBRDF_USE_RAPTOR_STATEMENT.

	* src/rdf_storage_hashes.c, src/rdf_storage_list.c:
	#ws

	* src/rdf_raptor_statement.c:
	file comment

2010-06-03  Dave Beckett <dave@dajobe.org>

	* src/rdf_statement.c:
	(main): fix call of librdf_statement_decode2 in test

	* src/rdf_statement.c:
	(main): use librdf_statement_decode2 in test

	* src/rdf_raptor_statement.c:
	(librdf_statement_decode2): Call librdf_node_decode with world

	* src/rdf_raptor_statement.c: Add librdf_statement_encode2 for
	raptor2

	* src/rdf_node.c:
	(librdf_node_get_counted_blank_identifier): No need for strlen

	* src/rdf_node.c:
	(librdf_node_get_counted_blank_identifier): Add for raptor v1 node

	* src/rdf_node.h, src/rdf_term.c:
	(librdf_node_get_counted_blank_identifier): Added

2010-06-02  Dave Beckett <dave@dajobe.org>

	* src/rdf_node.c:
	(librdf_new_node_from_blank_identifier): fix

	* src/rdf_node.h, src/rdf_term.c:
	(librdf_new_node_from_counted_blank_identifier): Implement for
	raptor 2 API

	* src/rdf_node.c, src/rdf_node.h:
	(librdf_new_node_from_counted_blank_identifier): Added

	* src/rdf_node.c, src/rdf_storage_hashes.c,
	src/rdf_storage_list.c, src/rdf_storage_trees.c: Use
	non-deprecated statement encode/decode functions for raptor V1

	* src/rdf_raptor_statement.c, src/rdf_statement.c,
	src/rdf_statement.h, src/rdf_storage_hashes.c: Added
	librdf_statement_encode2, librdf_statement_encode_parts2,
	librdf_statement_decode2 deprecating those without world
	arg.

	(librdf_statement_encode2, librdf_statement_encode_parts2,
	librdf_statement_decode2): Added deprecating those without world
	arg.

	(librdf_statement_encode, librdf_statement_encode_parts,
	librdf_statement_decode): Deprecated.

	* src/rdf_iterator.c, src/rdf_stream.c:
	Updated tests to use new
	librdf_node_new_static_node_iterator()

	* src/Makefile.am, src/rdf_node.c, src/rdf_node.h,
	src/rdf_node_common.c, src/rdf_term.c: Moved
	librdf_node_static_iterator code to new rdf_node_common.c module.

	(librdf_node_new_static_node_iterator): Added, deprecating
	librdf_node_static_iterator_create().

	(librdf_node_static_iterator_create): Always fails when built with
	raptor2 API.  Updated tests - all users of
	librdf_node_static_iterator_create() - to use new function.

	* src/librdf.h, src/rdf_node.h, src/rdf_raptor_statement.c,
	src/rdf_uri.c: Rename USE_RAPTOR_* macros to LIBRDF_USE_RAPTOR_*

	* src/librdf.h: tidy USE_RAPTOR_*

	* src/rdf_term.c:
	(librdf_new_node_from_typed_counted_literal): Use
	raptor_new_term_from_counted_literal

2010-05-26  Lauri Aalto <laalto@iki.fi>

	* src/rdf_storage_trees.c:
	(librdf_storage_trees_node_compare):
	librdf_node_get_literal_value_language()

2010-05-25  Dave Beckett <dave@dajobe.org>

	* src/rdf_term.c: Add checks for NULL world

	* src/rdf_term.c:
	(librdf_node_encode, librdf_node_decode, librdf_node_to_string,
	librdf_node_to_counted_string, librdf_node_print,
	librdf_node_equals): Implemented for librdf_node as raptor_term

	* src/rdf_query_rasqal.c, src/rdf_serializer_raptor.c,
	src/rdf_storage.c: Replace uses of statement->world for
	librdf_world with alternatives.  Comment out some logging deep in
	code refering to statement

	* src/Makefile.am, src/librdf.h, src/rdf_raptor_statement.c: Use
	rdf_raptor_statement.c for raptor2 with raptor_statement

	Added USE_RAPTOR_STATEMENT macro to use librdf_statement as
	typedef for raptor_statement.  Duplication of encode/decode
	statement should probably be moved to shared code in a separate
	module.  (node encode/decode too).

2010-05-24  Dave Beckett <dave@dajobe.org>

	* src/rdf_term.c: Remove strlen() and use raptor_term literal
	string_len

	* src/rdf_serializer.c:
	(librdf_serializer_serialize_stream_to_iostream,
	librdf_serializer_serialize_model_to_iostream): Document ownership
	transfer of raptor_iostreams.  Addresses issue #372
	http://bugs.librdf.org/mantis/view.php?id=372

2010-05-19  Lauri Aalto <laalto@iki.fi>

	* src/rdf_term.c:
	(librdf_node_write): Added USE_RAPTOR_TERM variant of the function
	to make binaries link.

	* src/rdf_term.c:
	(librdf_node_get_type): Fixed warnings about librdf_node_type <->
	raptor_term_type enums.

2010-05-18  Dave Beckett <dave@dajobe.org>

	* src/rdf_storage_sqlite.c: code style

	* src/rdf_storage_sqlite.c: code style

	* src/rdf_init.c: code style

	* src/rdf_init.c: 2010

	* src/rdf_storage_trees.c:
	(librdf_storage_trees_node_compare): Add raptor V2 API version.

	* src/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_node_helper): Use storage->world

	* src/rdf_storage_mysql.c: Use raptor_data_free_handler for
	raptor_new_sequence calls (V2 API)

	* src/rdf_raptor_internal.h: define raptor_data_free_handler for
	raptor V2 API

	* src/rdf_storage_trees.c: Update
	librdf_storage_trees_node_compare for raptor 2 API.

	(librdf_storage_trees_node_compare): Use raptor_term_compare with
	raptor 2 API.  NOTE: This may be too weak to use in a sort
	ordering.

	* src/rdf_query_internal.h, src/rdf_query_rasqal.c,
	src/rdf_query_virtuoso.c: Make redland_node_to_rasqal_literal work
	with updated raptor2 raptor_term

	(redland_node_to_rasqal_literal): Add world arg so that it works
	when librdf_node does not have a librdf_world inside, when built
	with raptor 2.  Uodate callers

	* src/rdf_uri.c:
	(librdf_new_uri_normalised_to_base): Rewrite to not know about
	rdf_uri internals when using raptor_uri for raptor V2

	* src/rdf_query_rasqal.c: Update to latest raptor_term blank field
	structure.

	* src/rdf_parser_raptor.c: Update to latest raptor_term blank
	field structure.

	* src/rdf_uri.c:
	(librdf_new_uri_normalised_to_base): Support USE_RAPTOR_URI

	* src/rdf_storage_mysql.c, src/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_node_helper,
	librdf_storage_mysql_node_hash_common): node->world not available
	with RAPTOR_USE_TERM, replace with storage->world

	* src/rdf_query_internal.h, src/rdf_query_rasqal.c,
	src/rdf_query_virtuoso.c:
	(redland_node_to_rasqal_literal): Internal function gains
	librdf_world* param. Required with USE_RAPTOR_TERM because
	raptor_terms doesn't contain it unlike librdf_node.

	* src/rdf_storage_trees.c:
	(librdf_storage_trees_node_compare): Support USE_RAPTOR_TERM. Use
	librdf_node_get_*() accessors instead of relying on librdf_node_s
	internals.

	* src/rdf_parser_raptor.c, src/rdf_query_rasqal.c: raptor2
	raptor_term_blank_value

2010-05-18  Lauri Aalto <laalto@iki.fi>

	* src/rdf_term.c: removed unnecessary #include with absolute path

2010-05-16  Dave Beckett <dave@dajobe.org>

	* src/rdf_term.c:
	(librdf_node_get_blank_identifier): Update to latest raptor_term
	fields.

2010-05-12  Dave Beckett <dave@dajobe.org>

	* src/rdf_term.c: Implement librdf_node_get_blank_identifier with
	term

2010-05-10  Dave Beckett <dave@dajobe.org>

	* src/rdf_term.c: implement more rdf_node with raptor_term

	* src/rdf_uri.c:
	(librdf_new_uri_normalised_to_base): Use old code to implement for
	raptor2 API.

2010-05-07  Dave Beckett <dave@dajobe.org>

	* src/rdf_term.c: open worlds

	* src/rdf_term.c: do not dup autodocs for now

	* src/Makefile.am, src/librdf.h, src/rdf_node.h, src/rdf_term.c:
	Add skeleton code for rdf_node as typedef for raptor_term

	* docs/tmpl/concepts.sgml, docs/tmpl/digest.sgml,
	docs/tmpl/files.sgml, docs/tmpl/hash.sgml,
	docs/tmpl/heuristics.sgml, docs/tmpl/iterator.sgml,
	docs/tmpl/list.sgml, docs/tmpl/log.sgml, docs/tmpl/model.sgml,
	docs/tmpl/node.sgml, docs/tmpl/parser.sgml, docs/tmpl/query.sgml,
	docs/tmpl/query_results.sgml, docs/tmpl/section-general.sgml,
	docs/tmpl/serializer.sgml, docs/tmpl/statement.sgml,
	docs/tmpl/storage.sgml, docs/tmpl/stream.sgml,
	docs/tmpl/unicode.sgml, docs/tmpl/unused.sgml, docs/tmpl/uri.sgml,
	docs/tmpl/world.sgml: Update tmpls

2010-05-03  Lauri Aalto <laalto@iki.fi>

	* src/rdf_model.c, src/rdf_parser.c, src/rdf_parser_raptor.c,
	src/rdf_serializer.c, src/rdf_storage.c: Ported to raptor2 head -
	funcptr typedef changes

2010-04-28  Nicholas J Humfrey <njh@aelius.com>

	* src/rdf_query_rasqal.c: Empty graph result set is not an error.

2010-04-24  Dave Beckett <dave@dajobe.org>

	* src/rdf_storage_postgresql.c: Make
	librdf_storage_postgresql_contains_statement
	work.

	(librdf_storage_postgresql_contains_statement): snprintf to the
	query string.  Patch from Andrew Malton.

	* src/rdf_uri.c: librdf_free_uri fix condition for C99

	* docs/redland-sections.txt: more functions

	* src/rdf_storage.c: autodocs

	* docs/redland-sections.txt: add new functions

	* build/shave-libtool.in, build/shave.in, build/shave.m4: Remove
	rest of SHAVE

	* configure.ac: remove build/shave*

	* configure.ac: Switch to automake 1.11 silent rules

2010-04-21  Nicholas J Humfrey <njh@aelius.com>

	* src/rdf_storage.c: Bug fix for
	librdf_storage_context_remove_statement() asseting that context
	should be non-NULL instead of statement.

2010-04-19  Nicholas J Humfrey <njh@aelius.com>

	* docs/redland-chapter-storage-modules.xml: Fix for broken link in
	documentation to the storage API page.

2010-04-19  Lauri Aalto <laalto@iki.fi>

	* src/rdf_parser_raptor.c: Ported to raptor2 head. Syntax
	description need_base_uri -> RAPTOR_SYNTAX_NEED_BASE_URI bit flag.

2010-04-16  Dave Beckett <dave@dajobe.org>

	* src/rdf_query_results.c:
	(librdf_query_results_formatter_write): Autodocs notine using this
	drains results

2010-04-07  Lauri Aalto <laalto@iki.fi>

	* configure.ac, redland.pc.in: Export raptor2 pkg-config
	dependencies when building on raptor2.

2010-04-06  Lauri Aalto <laalto@iki.fi>

	* src/rdf_parser_raptor.c, src/rdf_serializer_raptor.c: Ported to
	raptor2 git head - use raptor_syntax_description for
	parser/serializer discovery and inspection.

	* configure.ac: Support building with libraptor2. Prefer
	libraptor2 over libraptor.

2010-04-01  Nicholas J Humfrey <njh@aelius.com>

	* src/rdf_query.c, src/rdf_query.h: Added
	librdf_query_languages_enumerate() function.

2010-03-24  Dave Beckett <dave@dajobe.org>

	* configure.ac, src/rdf_raptor.h: Update minimum raptor to 1.4.19
	so that raptor_world typedef is always available

2010-03-23  Lauri Aalto <laalto@iki.fi>

	* src/rdf_raptor.h: Use RAPTOR_V2_AVAILABLE instead of
	RAPTOR_WORLD_DECLARED (no longer available) to decide whether to
	declare raptor_world type

	* src/rdf_heuristics.c: Fixed gcc4 warnings about using a char
	where an int is required

2010-03-18  Lauri Aalto <laalto@iki.fi>

	* src/rdf_parser_raptor.c, src/rdf_serializer_raptor.c: Ported to
	raptor2 git head - raptor_option related changes.

2010-03-10  Dave Robillard <dave@drobilla.net>

	* src/rdf_storage_trees.c:
	Fix ticket #350 - crash with trees storage.
	Fixes Issue#0000350 http://bugs.librdf.org/mantis/view.php?id=350

	(librdf_storage_trees_node_compare): Fix node comparison when one
	node has a language and the other doesn't, and other cases (make
	node comparison a proper order relation).

	* src/rdf_avltree.c:
	Use correct format string for size_t.

2010-03-10  Dave Beckett <dave@dajobe.org>

	* src/rdf_storage_virtuoso.c:
	(librdf_storage_virtuoso_get_contexts): Init iterator so it has a
	value even for error cases.

2010-03-03  Lauri Aalto <laalto@iki.fi>

	* src/rdf_serializer_raptor.c:
	(librdf_serializer_raptor_serialize_statement): Set
	raptor_statement graph term to NULL. Fixes access violations on
	raptor2 treating uninitialized pointer as a valid raptor_term*.

	* src/rdf_query_rasqal.c, src/rdf_raptor.c:
	Ported to raptor2 git head while retaining compatibility with
	raptor1.

	(librdf_query_rasqal_log_handler): Added for raptor2.
	
	(librdf_query_rasqal_error_handler, librdf_query_rasqal_warning_handler):
	Flagged out for raptor2.

	(librdf_query_rasqal_init): Set up raptor2 log handler, not
	error/warning handlers.

	(librdf_init_raptor, librdf_raptor_log_handler,
	librdf_raptor_fatal_error_handler, librdf_raptor_error_handler,
	librdf_raptor_warning_handler): Added log_handler for
	raptor2. Replaces old fatal/error/warning handlers.

2010-02-26  Dave Beckett <dave@dajobe.org>

	* docs/tmpl/log.sgml: Update tmpls

	* utils/redland-virtuoso-test.c: Get raptor world when
	initialising with raptor V2

2010-02-24  Lauri Aalto <laalto@iki.fi>

	* .gitignore: ignore *~

	* utils/redland-virtuoso-test.c: Made redland-virtuoso-test build
	on raptor2 (and raptor1)

2010-02-23  Lauri Aalto <laalto@iki.fi>

	* src/rdf_model.c, src/rdf_node.c, src/rdf_query_results.c,
	src/rdf_statement.c, src/rdf_stream.c: Allow flagging out
	deprecated implementations with LIBRDF_DISABLE_DEPRECATED

	* .gitignore: ignore *.stackdump

2010-02-22  Lauri Aalto <laalto@iki.fi>

	* src/rdf_log.c, src/rdf_raptor_internal.h, utils/rdfproc.c:
	raptor2 locator functions with preprocessor macros for raptor1
	compatibility

	* src/rdf_model.c, src/rdf_node.c, src/rdf_parser_raptor.c,
	src/rdf_query_results.c, src/rdf_raptor_internal.h,
	src/rdf_serializer_raptor.c, src/rdf_statement.c,
	src/rdf_stream.c, utils/rdfproc.c: raptor2 raptor_iostream calls
	with preprocessor macros for raptor1 compatibility

2010-02-18  Lauri Aalto <laalto@iki.fi>

	* src/rdf_node.c, src/rdf_parser_raptor.c,
	src/rdf_serializer_raptor.c, src/rdf_storage_sql.c: Ported to
	raptor2 git head

2010-02-16  Dave Beckett <dave@dajobe.org>

	* src/rdf_storage_sql.c: cast for strcmp

2010-02-16  Lauri Aalto <laalto@iki.fi>

	* src/rdf_log.h, src/rdf_raptor.c: Added raptor2 error/warning
	handlers

	Introduced LIBRDF_FROM_RAPTOR log facility.

2010-02-16  Lauri Aalto <laalto@iki.fi>

	* src/rdf_serializer_raptor.c:
	
	(librdf_serializer_raptor_serialize_stream_to_iostream,
	librdf_serializer_raptor_serialize_stream_to_counted_string): Call
	raptor_free_iostream() on raptor2 to get any output.

	* src/librdf.h, src/rdf_node.c, src/rdf_raptor.c, src/rdf_uri.c,
	src/rdf_uri_internal.h: Replaced librdf_uris with raptor_uris when
	using raptor2.

	(librdf_uri_get_digest): Internal function gains librdf_world*
	param.

	* utils/rdfproc.c: Changed deprecated librdf_model_print() call to
	librdf_model_write() with iostream.

	* src/rdf_model.c, src/rdf_statement.c: Fixed raptor2
	raptor_new_iostream calls in test code.

	* src/rdf_parser_raptor.c:
	(librdf_parser_raptor_new_statement_handler): Fixed raptor2
	raptor_new_iostream_to_file_handle() call with LIBRDF_DEBUG > 1.
	Removed unused debug variable.

	* src/rdf_avltree.c:
	(librdf_avltree_check_internal): Changed signature to take a
	size_t* instead of int*.

	(librdf_avltree_check): Pass size_t to
	librdf_avltree_check_internal to avoid warning about
	signed-unsigned comparison.

2010-02-15  Dave Beckett <dave@dajobe.org>

	* utils/redland-virtuoso-test.c: use librdf_model_write

	* utils/redland-virtuoso-test.c: librdf_free_uri

	* utils/redland-virtuoso-test.c: define base_uri

	* src/rdf_query_virtuoso.c: move results on

	* src/rdf_query_virtuoso.c: remove dup row_size

	* src/rdf_query_virtuoso.c:
	(librdf_query_virtuoso_new_results_formatter,
	librdf_query_virtuoso_free_results_formatter): Added copies from
	rdf_query_rasqal.c

	* src/rdf_query.c:
	(librdf_init_query): If not modular, register
	librdf_init_query_virtuoso() here

	* src/rdf_storage_virtuoso.c: If modular
	librdf_init_query_virtuoso() here

	* src/rdf_query.c:
	(librdf_init_query): Init virtuoso query.

	* src/rdf_query_virtuoso.c: fix row_size and numCols

	* src/rdf_storage_virtuoso.c: comments

	* src/rdf_storage_virtuoso_internal.h: Added
	SQL_DESC_COL_BOX_FLAGS

	* src/rdf_storage_virtuoso.c: Added conditional code (not used)
	for new lang/type descriptions.

	* src/rdf_storage_virtuoso_internal.h: Virtuoso docs and newer
	ODBC extensions Added SQL_DESC_COL_LITERAL_LANG and
	SQL_DESC_COL_LITERAL_TYPE from
	http://docs.openlinksw.com/virtuoso/odbcimplementation.html#virtodbcsparql

	* src/rdf_query_internal.h, src/rdf_query_rasqal.c: Export
	redland_node_to_rasqal_literal() internally

	* src/rdf_storage_virtuoso_internal.h: remove rasqal_query_results
	from librdf_query_virtuoso_context

	* src/rdf_query_virtuoso.c:
	(librdf_query_virtuoso_results_formatter_write): Format query
	results using rasqal.

	(librdf_query_virtuoso_results_formatter_write): Create rasqal
	variables table, query results and rows from librdf_query_results
	- that's about 3 copies: virtoso, librdf and rasqal - then use
	rasqal to serialize it.  Not optimal at all, but it should work.

	* src/rdf_storage_virtuoso.c: notes

	* src/rdf_storage_virtuoso.c: comments

	* src/rdf_storage_virtuoso.c: ws

	* src/rdf_storage_virtuoso.c: ws

	* src/rdf_storage_virtuoso.c: code style

	* src/rdf_storage_virtuoso.c: code style - removing assignments in
	if()

	* src/rdf_storage_virtuoso.c: doc comments and code style

	* src/rdf_storage_virtuoso.c: code style and some docs

	* src/rdf_storage_virtuoso.c: code style

	* src/rdf_storage_virtuoso.c: code style

	* src/Makefile.am: Added rasqal_query_virtuoso.c

	* src/rdf_storage_virtuoso_internal.h:
	librdf_query_virtuoso_context gains rasqal_query_results *results

	* src/rdf_storage_virtuoso.c: code style.

	* src/rdf_query_virtuoso.c: it compiles

	* src/rdf_query_virtuoso.c: code style

	* src/rdf_query_virtuoso.c: code style.

	* src/rdf_query_virtuoso.c: restore qrf functions from
	http://svn.librdf.org/view/*checkout*/librdf/trunk/src/rdf_query_virtuoso.c?revision=15455&content-type=text%2Fplain&pathrev=15458

	* src/rdf_query_virtuoso.c: code style

	* src/rdf_storage_virtuoso.c: code style

	* src/rdf_query_virtuoso.c: Check in for refactoring, getting it
	to compile.

	* src/rdf_storage.c, src/rdf_storage_module.h:
	librdf_storage_supports_query() and librdf_storage_query_execute()
	now call new storage factory methods.

	struct librdf_storage_factory_s gains supports_query and
	query_execute factory methods.

	* src/rdf_query_internal.h: move comment to match factory method

	* src/rdf_model.c, src/rdf_model.h: Added librdf_model_write()
	deprecating librdf_model_print() debug routine

	* src/rdf_stream.c, src/rdf_stream.h: Added librdf_stream_write()
	deprecating librdf_stream_print() debug routine

	* utils/redland-virtuoso-test.c: 'printf' format attribute in
	prototype for gcc

	* configure.ac, src/win32_rdf_config.h: 1.0.11

	* FAQS.html, INSTALL.html, LICENSE.html, NEWS.html, RELEASE.html,
	TODO.html: 1.0.11

	* README.html: GIT

	* src/rdf_query.c: autodocs

	* src/rdf_storage.c: autodocs

	* utils/redland-virtuoso-test.c: Use
	librdf_new_query_results_formatter2()

	* utils/rdfproc.c: Use librdf_new_query_results_formatter2()

	* src/rdf_statement.c:
	(librdf_statement_to_string): Use librdf_statement_write()

	* src/rdf_parser_raptor.c, src/rdf_statement.c,
	src/rdf_statement.h, src/rdf_stream.c: Add
	librdf_statement_write() to write to iostream

	(librdf_statement_write): Added using librdf_node_write().

	(librdf_statement_print): Use above.

	(main): Update test code to write to iostream to stdout and use
	librdf_statement_write()

	(librdf_parser_raptor_new_statement_handler): Update to use
	librdf_statement_write().

	(librdf_stream_print): Updated to use librdf_statement_write()

	* src/rdf_query.c:
	(main): Use librdf_query_results_to_counted_string2()

	* src/rdf_node.c:
	(librdf_node_to_string, librdf_node_to_counted_string): Alter
	these to construct an iostream to a string and use
	librdf_node_write() to create the strings.  These functions are
	still for debugging and deprecated.

2010-02-15  Lauri Aalto <laalto@iki.fi>

	* src/rdf_storage_sql.c: rdf_storage_sql: raptor2 git head support

	* src/rdf_node.c:
	(librdf_node_print): raptor2 raptor_new_iostream_to_file_handle()

2010-02-14  Dave Beckett <dave@dajobe.org>

	* src/rdf_query_results.c: autodocs

	* src/rdf_node.c, src/rdf_node.h: Deprecate librdf_node*_string()
	for librdf_node_write.

	(librdf_node_to_string, librdf_node_to_counted_string): Deprecated
	for librdf_node_write.  These were really only meant for internal
	use.  Discourage it more.

	* src/rdf_node.c:
	(librdf_node_write): Write NULL node as "(null)"

	* src/rdf_node.c, src/rdf_node.h: Added librdf_node_write() to
	write to iostream as ntriples and make librdf_node_print() use it

	(librdf_node_write); Added to write a redland node to an iostream,
	formatted as N-Triples.

	(librdf_node_print): Use above.  If anyone was relying on this debug
	format in scripts, this changes the result.  Intended to start to
	address Issue#0000124 http://bugs.librdf.org/mantis/view.php?id=124

	* src/rdf_query_results.c: Use
	librdf_new_query_results_formatter2() in reading/writing query
	results.
	
	(librdf_query_results_to_counted_string2,
	librdf_query_results_to_file_handle2): Use
	librdf_new_query_results_formatter2() for creating formatters
	rather than deprecated methods.

	* src/rdf_query.h, src/rdf_query_results.c: Added
	librdf_new_query_results_formatter2()

	(librdf_new_query_results_formatter2): Added, deprecating
	librdf_new_query_results_formatter and
	librdf_new_query_results_formatter_by_mime_type.

	* src/rdf_query_internal.h, src/rdf_query_rasqal.c,
	src/rdf_query_results.c: Switch to 1 query results formatter
	internal factory constructor method

	struct librdf_query_factory_s methods new_results_formatter and
	new_results_formatter_by_mime_type are replaced by one
	new_results_formatter method that takes name, mime type and format
	URI args.

	(librdf_query_rasqal_new_results_formatter): Renamed from
	librdf_query_rasqal_new_results_formatter2

	(librdf_query_rasqal_new_results_formatter,
	librdf_query_rasqal_new_results_formatter_by_mime_type):
	deleted

	(librdf_query_rasqal_register_factory): Register just one method
	above.

	(librdf_new_query_results_formatter,
	librdf_new_query_results_formatter_by_mime_type): Call just one
	factory method.

	* src/rdf_query_rasqal.c: Use
	librdf_query_rasqal_new_results_formatter2() to implement older
	methods.

	(librdf_query_rasqal_new_results_formatter2): Added and
	handle rasqal >= 0.9.18 and
	older.

	(librdf_query_rasqal_new_results_formatter,
	librdf_query_rasqal_new_results_formatter_by_mime_type): Call
	above function.

	(librdf_query_rasqal_register_factory): Register factory method
	new_results_Formatter2 is supported.

	* src/rdf_query_internal.h: struct librdf_query_factory_s gains
	new_results_formatter2 for query results formatting.

	* src/rdf_query_rasqal.c: Add conditional support for rasqal
	0.9.18+ query result formatter
	class.

	(librdf_query_rasqal_new_results_formatter,
	librdf_query_rasqal_new_results_formatter_by_mime_type): Call
	rasqal_new_query_results_formatter2 with unified args when rasqal
	is new enough.

2010-02-12  Lauri Aalto <laalto@iki.fi>

	* src/rdf_log.c, src/rdf_model.c, src/rdf_parser.c,
	src/rdf_parser_raptor.c, src/rdf_query_rasqal.c,
	src/rdf_query_results.c, src/rdf_raptor.c, src/rdf_serializer.c,
	src/rdf_serializer_raptor.c, src/rdf_storage.c:
	Work-in-progress to get librdf to build on raptor2 git HEAD.

	raptor_statement now implemented using raptor_terms.

	raptor_statement_handler loses constness of raptor_statement

	Dropped custom error/warning handlers in parsing.

	FIXME: raptor_uri <-> librdf_uri mapping is currently broken

	Changed function calls:
	- raptor_format_locator() -> raptor_locator_format()
	- raptor_new_sequence(): raptor_sequence_{free,print}_handler ->
	  raptor_data_..._handler
	- raptor_world_enumerate_parsers(), raptor_new_parser(),
	  raptor_world_guess_parser_name(), raptor_parser_parse_start(),
	  raptor_parser_parse_chunk(), raptor_parser_get_need_base_uri()
	- raptor_parser_set_{statement,namespace,generage_id}_handler
	- raptor_www_new()
	- raptor_feature -> raptor_option
	- raptor_world_enumerate_serializers(), raptor_new_serializer(),
	  raptor_serialize_start_to_iostream()
	- raptor_new_iostream_to_string(), raptor_new_iostream_to_file_handle()

2010-02-08  Dave Beckett <dave@dajobe.org>

	* src/rdf_query.h, src/rdf_query_results.c: Alter query result
	formatters to all take format name, mime_type and uri args

	(librdf_query_results_to_counted_string2,
	librdf_query_results_to_string2,
	librdf_query_results_to_file_handle2,
	librdf_query_results_to_file2): Added, deprecating version without
	the 2 suffix.

2010-01-24  Dave Beckett <dave@dajobe.org>

	* redland.pc.in: Use pkg-config (undocumented) Requires.private
	for raptor and rasqal

2010-01-20  Lauri Aalto <laalto@laalto-laptop.(none)>

	* utils/rdfproc.c:
	Use librdf_query_results_formats_* functions
	instead of corresponding rasqal_query_results_formats_* functions.
	Fixes Issue#0000322 http://bugs.librdf.org/mantis/view.php?id=322

2010-01-18  Lauri Aalto <laalto@iki.fi>

	* utils/rdfproc.c:
	(main): Fixed double deletion in CMD_CONTEXTS.
	Fixes Issue#0000321 http://bugs.librdf.org/mantis/view.php?id=321

2010-01-06  Dave Beckett <dave@dajobe.org>

	* README.html: 2010

2010-01-02  Dave Beckett <dave@dajobe.org>

	* src/.gitignore, utils/.gitignore: Ignore .o files

	* .gitignore, build/.gitignore, demos/.gitignore, docs/.gitignore,
	docs/tmpl/.gitignore, examples/.gitignore, src/.gitignore,
	utils/.gitignore: Add .gitignore to replace SVN prop svn:ignore

2009-12-18  Dave Beckett <dave@dajobe.org>

	* Add librdf.la to librdf_storage_virtuoso_la_LIBADD

2009-12-16  Dave Beckett  <dave@dajobe.org>

	* Snapshotted redland_1_0_10 for 1.0.10 release (SVN 15919)

	* src/rdf_cache.c: (main): Free cache inside test loop

2009-12-15  Lauri Aalto <laalto@iki.fi>

	* src/rdf_cache.c: Fixed rdf_cache_test deadlock with WITH_THREADS.
	(librdf_free_cache_internal,librdf_cache_delete_internal): Pulled
	functionality from librdf_free_cache(), librdf_cache_delete()
	without mutex locking.
	(librdf_new_cache): Call librdf_free_cache_internal() when already
	holding a mutex lock.
	(librdf_cache_cleanup): Call librdf_cache_delete_internal(), mutex
	lock already held by librdf_cache_set_common().

	* src/rdf_hash.c, src/rdf_init.c: (librdf_free_hash_datums): Do
	not assume hash_datums mutex is initialized.
	(main): Remove librdf_world_open() from minimum init-finish test
	case.
	Fixes issue http://bugs.librdf.org/mantis/view.php?id=317

2009-12-14  Dave Beckett <dave@dajobe.org>

	* NEWS.html, RELEASE.html: 1.0.10 notes updated for issue 317 fix

	* src/rdf_init.c: (main): Call librdf_world_open(world) to make
	the test run when threads are enabled.
	Fixes Issue#0000317 http://bugs.librdf.org/mantis/view.php?id=317

	* src/rdf_storage_trees.c: (librdf_storage_trees_node_compare):
	Check language and datatype URI when comparing literals.
	Fixes Issue#000311 http://bugs.librdf.org/mantis/view.php?id=311
	with patch from Gregory Williams - Thanks!

	* src/rdf_storage_trees.c:
	(librdf_storage_trees_remove_statement_internal): Return 0 on
	success (always).
	Fixes Issue#000304 http://bugs.librdf.org/mantis/view.php?id=304

2009-12-13  Dave Beckett <dave@dajobe.org>

	* redland-config.in: Now a wrapper around pkg-config redland

	* src/rdf_storage_postgresql.c: Casts for C++

	* src/rdf_init.c: (librdf_basename): Casts for C++

	* docs/tmpl/parser.sgml, docs/tmpl/serializer.sgml: Update docbook
	tmpls

	* build, build/shave-libtool.in, build/shave.in, build/shave.m4,
	configure.ac: Enable SHAVE support for maintainer; move aux files
	to build dir

	* docs/redland-sections.txt: Add librdf_parser_check_name and
	librdf_serializer_check_name

	* src/rdf_storage_virtuoso.c: remove public autodocs from scanning

	* configure.ac: Berkeley DB 4.8

	* NEWS.html, RELEASE.html, configure.ac, src/win32_rdf_config.h:
	Bump version to 1.0.10

	* src/rdf_storage_virtuoso.c: Applied patch from 'lenrek' to "fix
	seg fault on x86_64 machines" with virtuoso storage.

	* src/rdf_query_rasqal.c: Use #ifdef
	RASQAL_TRIPLES_SOURCE_MIN_VERSION and #ifdef
	RASQAL_TRIPLES_SOURCE_FACTORY_MIN_VERSION from rasqal.h instead of
	RASQAL_TRIPLE_SOURCES_HAVE_API_VERSION defined locally by redland
	configure.

	* configure.ac: No need to define
	RASQAL_TRIPLE_SOURCES_HAVE_API_VERSION, can use other macros from
	rasqal.h

2009-12-12  Dave Beckett <dave@dajobe.org>

	* src/rdf_cache.c: (librdf_cache_set_common): Call memset with
	address of buffer, not address of pointer to buffer.

	* src/rdf_query_rasqal.c: Use
	RASQAL_TRIPLE_SOURCES_HAVE_API_VERSION to set API version fields
	when using rasqal 0.9.17+

	* configure.ac: Define RASQAL_TRIPLE_SOURCES_HAVE_API_VERSION for
	rasqal 0.9.17+

	* autogen.sh: add space

2009-11-29  Lauri Aalto <laalto@iki.fi>

	* autogen.sh: Reduce autogen noise on systems where uname is not
	in /usr/bin

2009-11-17  Lauri Aalto <laalto@iki.fi>

	* src/rdf_query_rasqal.c:
	(rasqal_literal_get_rdf_term_type): Cannot use enum
	(RASQAL_LITERAL_UDT) with preprocessor, use
	RASQAL_LITERAL_UDT_DEFINED instead.

	* src/rdf_query_rasqal.c:
	(rasqal_literal_get_rdf_term_type): Changed return type from int
	to rasqal_literal_type enum to prevent int-enum conversion
	warnings.

2009-11-16  Dave Beckett <dave@dajobe.org>

	* src/rdf_query_rasqal.c:
	(rasqal_literal_get_rdf_term_type): Added when RASQAL_LITERAL_UDT
	is not defined - rasqal is 0.9.16 or older.
	(rasqal_literal_to_redland_node): Use above to replace
	ever-growing if condition that is fragile when new literal types
	are added.

2009-11-16  Lauri Aalto <laalto@iki.fi>

	* src/rdf_query_rasqal.c:
	(rasqal_literal_to_redland_node): Support RASQAL_LITERAL_UDT
	user-defined datatype literals introduced in rasqal r15608.

2009-10-14  Dave Beckett <dave@dajobe.org>

	* src/rdf_storage_postgresql.c:
	Replace deprecated PQescapeString with PQescapeStringConn that
	takes a PGconn connection handle and when encoding takes into
	consideration any connection properties such as character
	encodings in force.

2009-10-10  Dave Beckett <dave@dajobe.org>

	* utils/rdfproc.c:
	CMD_PARSE: get the warning count from the warning_count_node, not
	the (just freed) error_count_node

2009-09-07  Dave Beckett <dave@dajobe.org>

	* docs/redland-docs.xml: Make this newer legal docbook

2009-08-30  Dave Beckett <dave@dajobe.org>

	* src/rdf_query_rasqal.c: ws/indenting

2009-08-26  Dave Beckett <dave@dajobe.org>

	* utils: props

2009-08-25  Dave Beckett <dave@dajobe.org>

	* src/Makefile.am, src/rdf_query_virtuoso.c, src/rdf_storage.c,
	src/rdf_storage_module.h, src/rdf_storage_virtuoso.c:
	Remove virtuoso vsparql query part for now - should use some
	rasqal parts that are not yet public

	* utils/redland-virtuoso-test.c: cut the source down so it
	compiles.  body seems to have been repeated, possibly by multiple
	rebasing of original patches

	* src/Makefile.am: copyright years

	* utils/redland-virtuoso-test.c:
	Add redland-virtuoso-test.c

	* src/rdf_query_virtuoso.c, src/rdf_storage_virtuoso.c,
	src/rdf_storage_virtuoso_internal.h:
	Also add new Virtuoso storage files also from
	http://bugs.librdf.org/mantis/view.php?id=284

	* configure.ac, docs/redland-chapter-storage-modules.xml,
	src/Makefile.am, src/rdf_query_internal.h, src/rdf_storage.c,
	src/rdf_storage_internal.h, src/rdf_storage_module.h,
	utils/Makefile.am:
	Applied raw Virtuoso storage patch from
	http://bugs.librdf.org/mantis/view.php?id=284 - does not compile
	at this commit due to use of rasqal internals that are no longer
	available to librdf.

	* autogen.sh: Update common autogen.sh

	* configure.ac: Add -W to CPPFLAGS not CFLAGS, so they are not
	used in link lines

	* src/Makefile.am: typo $

	* configure.ac: Put modular build libltdl includes and libs into
	INTERNAL macros

	* redland-src-config.in: update for moved includes to src dir

	* utils/Makefile.am: Add rule for librdf.la

	* redland-src-config.in: make redland-src-config work for external
	raptor and rasqal again

2009-08-13  Lauri Aalto <laalto@iki.fi>

	* src/Makefile.am, src/rdf_list.h: Install rdf_list.h header and
	export its functions so that they can be used e.g. in external
	storage modules.

2009-08-12  Dave Beckett <dave@dajobe.org>

	* configure.ac, src/rdf_storage_sqlite.c, src/win32_rdf_config.h:
	Change define SQLITE_API to REDLAND_SQLITE_API to allow redland to
	compile with sqlite 3.6.17 or newer where the SQLITE_API macro is
	defined.  Thanks to Samuli Suominen for the report and fix.

2009-07-17  Dave Beckett <dave@dajobe.org>

	* COPYING: Update GPL2 to latest version (white space changes)
	used by rasqal, raptor

2009-06-06  Lauri Aalto <laalto@iki.fi>

	* configure.ac: Default to environment LIBS, CPPFLAGS,
	LDFLAGS. Addresses issue at
	http://bugs.gentoo.org/show_bug.cgi?id=267405

2009-05-20  Dave Beckett <dave@dajobe.org>

	* configure.ac: Remove libltdlc.la from
	LIBRDF_PKGCONFIG_PRIVATE_LIBS which ends up in pkgconfig
	Libs.private field

2009-05-01  Dave Beckett <dave@dajobe.org>

	* src/rdf_storage_file.c: Add storage option 'format' for uri and
	file storages librdf_storage_file_instance gains format_name
	field.
	(librdf_storage_file_init): Validate the format values as legal
	parser name and for file-storage, serializer name too.  Log a
	warning if the type given is wrong.
	(librdf_storage_file_terminate): Free format_name
	(librdf_storage_file_sync): Use format_name for serializer for
	file storage.

	* src/rdf_parser.c, src/rdf_serializer.c:
	(librdf_parser_check_name, librdf_serializer_check_name): fix
	strcmp.

	* src/rdf_parser.c:
	(librdf_parser_check_name): fix assert

	* src/rdf_serializer.c:
	(librdf_serializer_check_name): fix assert

	* src/rdf_serializer.c, src/rdf_serializer.h:
	(librdf_serializer_check_name): Added to check if a serializer
	name is known.

	* src/rdf_parser.c, src/rdf_parser.h:
	(librdf_parser_check_name): Added to check if a parser name is
	valid.

2009-04-28  Dave Robillard <dave@drobilla.net>

	* src/Makefile.am: Make modular storage backends depend on librdf
	library to avoid unresolved symbol errors when librdf itself is
	dynamically loaded.

	* autogen.sh: Don't lie about configure arguments.

2009-04-14  Lauri Aalto <laalto@iki.fi>

	* src/rdf_storage.c:
	(librdf_storage_register_factory): Clean up storage factory if
	version check fails.

2009-04-13  Dave Beckett <dave@dajobe.org>

	* src/rdf_storage.c:
	(librdf_memstr): Removed, no longer used
	(ltdl_module_callback): More constrained tests for what is a legal
	storage module name especially with debugging, to prevent false
	warnings during 'make check'.

	* src/Makefile.am:
	Set storage module test dir to $(abs_builddir)/.libs

	* src/rdf_storage.c:
	(ltdl_module_callback): Only attempt to load .so files when
	debugging. This should aid false error messages when testing with
	'make check' in the source tree

	* ChangeLog.1, ChangeLog.2, ChangeLog.3, ChangeLog.4, ChangeLog.6:
	Add old changelogs

	* src/rdf_storage_postgresql.c:
	(librdf_storage_postgresql_init): Use res2 in PQresultErrorField()
	call after setting it to the error code.

2009-04-12  Dave Beckett  <dave@dajobe.org>

	* Snapshotted redland_1_0_9 for 1.0.9 release (SVN 15143)

	* INSTALL.html: Document --enable-debug

	* configure.ac: Add --enable-debug to turn on LIBRDF_DEBUG without
	the need for maintainer mode.
	Removed unused STANDARD_CFLAGS subst.

	* src/Makefile.am: Removed unused STANDARD_CFLAGS

	* redland.pc.in: Add plugindir variable for the directory where
	modules go

	* Redland.i: Added librdf_parser_guess_name2() to SWIG API

	* AUTHORS: Added Dave Robillard and Lauri Aalto

	* INSTALL.html: Update to remove mention of raptor and rasqal
	building inside.

	* src/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_literal_helper): Init language_e_len to
	prevent gcc warning about used when not initialised.

	* docs/tmpl/iterator.sgml, docs/tmpl/parser.sgml,
	docs/tmpl/stream.sgml: update sgml templates

	* src/rdf_cache.c:
	(librdf_cache_set_common): Initialise new_object to NULL and check
	before freeing.

	* src/rdf_storage_postgresql.c:
	(librdf_storage_postgresql_init): Init res to NULL

	* src/rdf_iterator.h, src/rdf_stream.h: autodocs

	* docs/redland-sections.txt, docs/tmpl/parser.sgml,
	docs/tmpl/storage.sgml: Update doc templates and sections

	* docs/Makefile.am: Final filter build rule fix to make it works
	with 'make distcheck'.
	
	This took hours of tricky make and VPATH debugging - info recorded
	in makefile comments.

2009-04-11  Dave Beckett <dave@dajobe.org>

	* docs/Makefile.am: Adjust filter header rule to ensure it builds

	* docs/Makefile.am: Make $(top_srcdir)/src/filtered_rdf_log.h rule
	public

	* src/rdf_storage.c, src/rdf_storage.h:
	(librdf_storage_register_factory): Passes back an int status
	value. Now checks for the interface version in the supported range
	and fails if not.  Added some more parameter validation.

	* configure.ac, src/rdf_storage_module.h: Move
	LIBRDF_STORAGE_INTERFACE_VERSION to a macro and define max an min
	storage interface versions LIBRDF_STORAGE_MIN_INTERFACE_VERSION
	and LIBRDF_STORAGE_MAX_INTERFACE_VERSION

	* src/rdf_parser.c, src/rdf_parser.h:
	(librdf_parser_guess_name2): Added with new librdf_world* world
	argument.
	(librdf_parser_guess_name): Restored, but deprecated and uses the
	above to do the work.  Makes existing librdf API the same as 1.0.8
	in the absence of raptor V2 released.

	* src/rdf_stream.h, src/rdf_stream_internal.h: Move
	librdf_stream_get_method_flags public

	* src/rdf_stream_internal.h: librdf_stream_get_method_flags added
	for flags arg of stream get_method: aliases of iterator get_method
	flags for the day that iterator and stream are merged.

	* src/rdf_iterator.h: librdf_iterator_get_method_flags added for
	flags arg of iterator get_method

	* docs/tmpl/log.sgml, docs/tmpl/parser.sgml,
	docs/tmpl/redland-unused.sgml, docs/tmpl/storage.sgml,
	docs/tmpl/unused.sgml: Update sgml templates

2009-04-10  Dave Beckett <dave@dajobe.org>

	* src/rdf_storage_mysql.c:
	(librdf_storage_mysql_transaction_terminate): internal autodocs

	* docs/redland-sections.txt: Remove internal macros from unused section

	* src/rdf_cache.h: librdf_cache - autodoc

	* src/rdf_storage_module.h: librdf_storage_instance - autodocs

	* src/rdf_storage.c: (librdf_storage_set_instance,
	librdf_storage_get_instance): autodocs

	* docs/Makefile.am: Filter rdf_log.h before gtkdoc-scan gets there

	* src/rdf_parser.h: autodocs - format librdf_parser_set_uri_filter
	prototype so gtkdoc-scan can scan it

	* src/rdf_log.c: (librdf_log): autodocs - document .../Varargs

	* src/rdf_cache.c, src/rdf_storage.c: autodocs

	* docs/redland-sections.txt: More docs

	* docs/redland-sections.txt: update sections

	* src/rdf_raptor.c, src/rdf_raptor.h, src/rdf_raptor_internal.h:
	Convert to Unix LF

2009-04-07  Dave Beckett <dave@dajobe.org>

	* examples/Makefile.am, utils/Makefile.am: Split linker libs and
	flags between LDADD and AM_LDFLAGS

	* examples/Makefile.am: Add rule to make librdf.la

	* docs/tmpl/log.sgml, docs/tmpl/parser.sgml,
	docs/tmpl/redland-unused.sgml: Update templates

	* docs/Makefile.am: Fix DOC_SOURCE_DIR

	* Makefile.am, configure.ac, docs/Makefile.am,
	examples/Makefile.am, librdf, redland-src-config.in, src,
	utils/Makefile.am: Renamed dir librdf/ to src/

2009-03-31  Dave Beckett <dave@dajobe.org>

	* autogen.sh: Use LTDL_INIT in configure.ac to trigger --ltdl

	* librdf/rdf_storage_postgresql.c: make postgresql storage
	autodocs internal

	* librdf/rdf_hash.c: librdf_hash_values_count autodocs

	* librdf/rdf_storage_hashes.c: autodocs for
	librdf_storage_hashes_close are internal

	* librdf/rdf_storage_module.h: autodocs for storage factory types

	* librdf/rdf_storage_file.c, librdf/rdf_storage_hashes.c,
	librdf/rdf_storage_list.c, librdf/rdf_storage_mysql.c,
	librdf/rdf_storage_postgresql.c, librdf/rdf_storage_sqlite.c,
	librdf/rdf_storage_trees.c, librdf/rdf_storage_tstore.c:
	Fix autodocs for storage module registration functions to make them
	internal

	* configure.ac, NEWS.html, librdf/win32_rdf_config.h: Bump version
	to 1.0.9

	* autogen.sh, configure.ac: libtool V2 only. Minimum 2.2.0

2009-03-30  Dave Beckett <dave@dajobe.org>

	* docs/Makefile.am: (redland.3): Adjust sed to make NAME section
	of generated manual more debian lintian friendly

	* librdf/Makefile.am: Add rule to build
	${top_build_prefix}libltdl/libltdlc.la and remove those to try to
	build raptor and rasqal locally.

2009-03-29  Dave Beckett <dave@dajobe.org>

	* INSTALL.html, configure.ac, librdf/Makefile.am,
	librdf/rdf_digest_openssl.c: Removed openssl digest support - not
	used much and an extra large dependency. MD5 and SHA1 remain
	builtin.

	* librdf/rdf_hash.c:
	(librdf_free_hash_datum): Debug print at level 2 or more

	* librdf/rdf_storage_postgresql.c: Applied fixes from
	Issue#0000286 to fix "Numerous leaks, potential NULL pointer use,
	and dropped postgresql errors and buffer overruns in the
	postgresql storage module" Rebased from original patch around
	about SVN r14170 to current head, applied recent changes and fixed
	ISO C90 problems by moving declarations and assertions to start of
	blocks.
	Fixes Issue#0000286 http://bugs.librdf.org/mantis/view.php?id=286

	* librdf/rdf_storage_postgresql.c:
	(librdf_storage_postgresql_get_contexts): Fix allocation of N
	bytes not N x size_t bytes using patch from bug:
	Fixes Issue#0000285 http://bugs.librdf.org/mantis/view.php?id=285
	May also fix issue 102 according to bug.

	(librdf_storage_postgresql_free_gccontext_row): Removes unused
	function.  Unused because the memory the function frees belongs to a
	PGresult struct and is freed when that struct is freed with the
	appropriate postgresql API.

	* librdf/rdf_statement.c:
	(librdf_statement_encode_parts): Fix a buffer overrun error that
	could occur with certain size buffers. 	A buffer size of 1 is sure
	to write past the end of the buffer.
	Patch from Lou Sakey 2008-07-31 to redland-dev

	* librdf/rdf_hash.c: Protect world->hash_datums_list with
	hash_datums_mutex when threading.
	Patch from Lou Sakey 2008-07-31 to redland-dev

	* librdf/rdf_init.c: 
	(librdf_free_world): Destroy hash_datums_mutex and others in
	reverse order when threading.
	(librdf_world_init_mutex): Init hash_datums_mutex.
	Patch from Lou Sakey 2008-07-31 to redland-dev

	* librdf/rdf_init_internal.h: Add hash_datums_mutex for locking
	hash_datums class when with threads.
	Patch from Lou Sakey 2008-07-31 to redland-dev

	* librdf/rdf_log.h: librdf_log_level_func and librdf_log_func
	functions gain REDLAND_CALLBACK_STDCALL before function pointer to
	allow windows to adjust the calling convention for C#
	compatibility.
	Based on patch from Lou Sakey 2008-07-31 to redland-dev

	* librdf/librdf.h: Added REDLAND_CALLBACK_STDCALL macro to prefix
	selected callback function pointer definitions.  Enabled for
	windows when USE_STDCALL_CALLBACKS is defined.

	* librdf/rdf_uri.c: (librdf_new_uri): Clear key and value to all
	zeros before use to make it easier to debug since not all fields
	of the structure were used.
	Patch from Lou Sakey 2008-07-31 to redland-dev

	* librdf/win32_rdf_config.h: win32: Add STDCALL_CALLBACKS
	Enable HAVE_PTHREADS
	Disable mysql storage
	Patch from Lou Sakey 2008-07-31 to redland-dev

	* configure.ac: hello Berkeley DB 4.7

	* utils/Makefile.am: Add fix-groff-xhtml to dist

	* utils/Makefile.am, utils/fix-groff-xhtml (from
	/raptor/trunk/fix-groff-xhtml:15041): Copy in fix-groff-xhtml from
	raptor

	* configure.ac: libtool ltdl config that seems to work for V1 and V2

2009-03-29  Dave Robillard <dave@drobilla.net>

	* configure.ac, redland-src-config.in: Remove vestigial
	--with-raptor=internal and --with-rasqal=internal configure
	options.

2009-03-29  Dave Beckett <dave@dajobe.org>

	* Makefile.am: Add $(subdirs) to SUBDIRS if e.g. libltdl needs building

	* configure.ac: Use LT_INIT LTDL_INIT and LT_CONFIG_LTDL_DIR to
	initialize libtool and libltdl

2009-03-29  Dave Robillard <dave@drobilla.net>

	* librdf/rdf_init_internal.h, librdf/rdf_query_rasqal.c,
	librdf/rdf_raptor.c, librdf/rdf_raptor.h: Compile against raptor
	1.4.18.

2009-03-29  Dave Beckett <dave@dajobe.org>

	* autogen.sh: Delete libltdl dir early and always so it'll never
	be used by autogen.sh and will always be re-generated by
	libtoolize when needed.

	* configure.ac: revert libltdl/Makefile

	* configure.ac: Generate libltdl/Makefile

2009-02-18  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_file.c, librdf/rdf_storage_hashes.c,
	librdf/rdf_storage_list.c, librdf/rdf_storage_mysql.c,
	librdf/rdf_storage_postgresql.c, librdf/rdf_storage_sqlite.c,
	librdf/rdf_storage_trees.c, librdf/rdf_storage_tstore.c: Check for
	failures in storage instance allocation.

2009-01-13  Lauri Aalto <laalto@iki.fi>

	* librdf/rdf_storage_sqlite.c:
	(librdf_storage_sqlite_literal_helper): Fixed whitespace in sql
	expression.

	* librdf/rdf_storage_sqlite.c: Do not write to the sqlite database
	when just querying.
	(librdf_storage_sqlite_uri_helper,
	librdf_storage_sqlite_blank_helper,
	librdf_storage_sqlite_literal_helper,
	librdf_storage_sqlite_node_helper,
	librdf_storage_sqlite_statement_helper,
	librdf_storage_sqlite_statement_operator_helper): Take in an
	add_new parameter to control whether to create new
	uri/blank/literal ids.
	(librdf_storage_sqlite_add_statements,
	librdf_storage_sqlite_context_add_statement): add_new
	(librdf_storage_sqlite_contains_statement): No add_new. Removed
	FIXME note about the issue.
	(librdf_storage_sqlite_find_statements): No add_new. Allow
	negative node_ids in queries. (FIXME: should not exec queries that
	are known to return nothing)
	(librdf_storage_sqlite_context_remove_statement,
	librdf_storage_sqlite_context_remove_statements,
	librdf_storage_sqlite_context_serialise): No add_new.
